(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{392:function(n,o,t){"use strict";t.r(o);var e=t(3),i=t.n(e),s=t(4),p=t.n(s),l=t(2),a=t.n(l),r=t(5),c=t.n(r),u=t(403),d=(t(702),function(n){function o(){var n,e,s,l;p()(this,o);for(var r=arguments.length,c=Array(r),u=0;u<r;u++)c[u]=arguments[u];return e=s=a()(this,(n=o.__proto__||i()(o)).call.apply(n,[this].concat(c))),s.document=function(){return{document:t(438),className:"popup-page"}},l=e,a()(s,l)}return c()(o,n),o}(u.a));o.default=d},403:function(n,o,t){"use strict";var e=t(239),i=t.n(e),s=t(240),p=t.n(s),l=t(404),a=t.n(l),r=t(3),c=t.n(r),u=t(4),d=t.n(u),h=t(6),m=t.n(h),f=t(2),v=t.n(f),C=t(5),k=t.n(C),g=t(0),b=t.n(g),y=t(42),B=t.n(y),x=t(405),M=t.n(x),N=t(406),L=t.n(N),P=(t(407),function(n){function o(n){d()(this,o);var t=v()(this,(o.__proto__||c()(o)).call(this,n));return t.nodeList=[],t.components=new a.a,t}return k()(o,n),m()(o,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){B.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,o=!1,t=void 0;try{for(var e,s=i()(this.components);!(n=(e=s.next()).done);n=!0){var l=e.value,a=p()(l,2),r=a[0],c=a[1],u=document.getElementById(r);this.nodeList.push(u),u instanceof HTMLElement&&B.a.render(c,u)}}catch(n){o=!0,t=n}finally{try{!n&&s.return&&s.return()}finally{if(o)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),o=n.document,t=n.className;if("string"==typeof o){this.components.clear();var e=new M.a.Renderer;e.table=function(n,o){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+o+"</tbody></table></div>"};var i=M()(o,{renderer:e,highlight:function(n){return L.a.highlightAuto(n).value}});return b.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:i}})}return b.a.createElement("span",null)}}]),o}(b.a.Component));o.a=P},438:function(n,o){n.exports="## 弹出框 Popup\n\n\n\n### 基本用法\n```jsx\nimport { Popup, Cell, Button } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popBottom: false,\n      popTop: false,\n      popLeft: false,\n      popRight: false,\n    };\n  }\n\n  open(key) {\n    this.setState({\n      [`${key}`]: true,\n    });\n  }\n\n  close(key) {\n    this.setState({\n      [`${key}`]: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popTop')}>开启</Button>\n          }\n        >\n          从上方弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popBottom')}>开启</Button>\n          }\n        >\n          从下方弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popLeft')}>开启</Button>\n          }\n        >\n          从左侧弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popRight')}>开启</Button>\n          }\n        >\n          从右侧弹出\n        </Cell>\n\n        <Popup\n          autoClose\n          visible={this.state.popTop}\n          direction=\"top\"\n          duration={3000}\n          mask={false}\n          onMaskClick={() => this.close('popTop')}\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box-top\">\n            更新成功\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popBottom}\n          direction=\"bottom\"\n          onMaskClick={() => this.close('popBottom')}\n          onOpen={() => console.log('打开')}\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box\">\n            <Button size=\"xs\" onClick={() => { this.close('popBottom'); }}>关闭弹层</Button>\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popLeft}\n          onMaskClick={() => this.close('popLeft')}\n          direction=\"left\"\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box-left\">\n            <Button size=\"xs\" onClick={() => this.close('popLeft')}>关闭弹层</Button>\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popRight}\n          onMaskClick={() => this.close('popRight')}\n          direction=\"right\"\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box\">\n            <Button size=\"xs\" onClick={() => this.close('popRight')}>关闭弹层</Button>\n          </div>\n        </Popup>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-popup | | 类名前缀 |\n| className | string | | | 追加类名 |\n| visible | boolean | false | | 是否显示 |\n| autoClose | boolean | false | | 是否自动关闭 |\n| direction | string | `bottom` | `top`, `bottom`, `left`, `right` | 弹出方向 |\n| stayTime | number | 3000 | | 自动关闭前停留的时间（单位：毫秒） |\n| animationDuration | number | 200 | | 动画执行时间（单位：毫秒） |\n| maskType | string | `normal` | `transparent`, `light`, `normal`, `dark` | 遮罩层的类型 |\n| onMaskClick | <code>() => void</code> | noop | | 点击遮罩层时触发的回调函数 |\n| onClose | <code>() => void</code> | noop | | 关闭后触发的回调函数 |\n"},702:function(n,o,t){}}]);