(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{247:function(n,e,t){"use strict";t.r(e);var o=t(32),a=t.n(o),i=t(33),l=t.n(i),r=t(34),s=t.n(r),c=t(35),d=t.n(c),m=function(n){function e(){var n,o,i,r;l()(this,e);for(var c=arguments.length,d=Array(c),m=0;m<c;m++)d[m]=arguments[m];return o=i=s()(this,(n=e.__proto__||a()(e)).call.apply(n,[this].concat(d))),i.document=function(){return{document:t(343),className:"modal-page"}},r=o,s()(i,r)}return d()(e,n),e}(t(312).a);e.default=m},293:function(n,e,t){"use strict";t(296),t(303)},294:function(n,e,t){"use strict";var o=t(32),a=t.n(o),i=t(33),l=t.n(i),r=t(36),s=t.n(r),c=t(34),d=t.n(c),m=t(35),u=t.n(m),p=t(0),h=t.n(p),f=t(292),v=t.n(f),y=function(n){function e(){return l()(this,e),d()(this,(e.__proto__||a()(e)).apply(this,arguments))}return u()(e,n),s()(e,[{key:"render",value:function(){var n=this.props,e=n.prefixCls,t=n.className,o=n.titleRender,a=n.moreRender,i=n.children,l=v()(""+e,t);return h.a.createElement("div",{className:l},h.a.createElement("div",{className:e+"-header"},o&&h.a.createElement("div",{className:e+"-title"},o),a&&h.a.createElement("div",{className:e+"-more"},a)),h.a.createElement("div",{className:e+"-body"},i))}}]),e}(p.PureComponent);e.a=y,y.defaultProps={prefixCls:"za-panel"}},295:function(n,e,t){"use strict";t(293),t(304)},297:function(n,e,t){"use strict";t(296),t(310)},299:function(n,e,t){"use strict";var o=t(298),a=t.n(o),i=t(32),l=t.n(i),r=t(33),s=t.n(r),c=t(36),d=t.n(c),m=t(34),u=t.n(m),p=t(35),h=t.n(p),f=t(0),v=t.n(f),y=t(292),C=t.n(y),g=(t(313),function(n){function e(){return s()(this,e),u()(this,(e.__proto__||l()(e)).apply(this,arguments))}return h()(e,n),d()(e,[{key:"componentDidMount",value:function(){if("index-page"===this.props.className){var n=window.sessionStorage[this.props.className];n&&(this.container.scrollTop=n)}}},{key:"componentWillUnmount",value:function(){if("index-page"===this.props.className){var n=this.container.scrollTop;window.sessionStorage[this.props.className]=n}}},{key:"render",value:function(){var n=this,e=this.props,t=e.className,o=e.children,i=C()(a()({"app-container":!0},t,!!t));return v.a.createElement("div",{ref:function(e){n.container=e},className:i},v.a.createElement("a",{className:"github",href:"https://github.com/ZhonganTechENG/zarm"},v.a.createElement("svg",{"aria-hidden":"true",version:"1.1",viewBox:"0 0 16 16"},v.a.createElement("path",{fillRule:"evenodd",d:"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"}))),o)}}]),e}(f.Component));e.a=g},300:function(n,e,t){"use strict";var o=t(32),a=t.n(o),i=t(33),l=t.n(i),r=t(36),s=t.n(r),c=t(34),d=t.n(c),m=t(35),u=t.n(m),p=t(0),h=t.n(p),f=(t(314),function(n){function e(){return l()(this,e),d()(this,(e.__proto__||a()(e)).apply(this,arguments))}return u()(e,n),s()(e,[{key:"render",value:function(){return h.a.createElement("footer",null,h.a.createElement("div",{className:"copyright"},h.a.createElement("div",{className:"copyright-cn"},"众安·体验设计中心"),h.a.createElement("div",{className:"copyright-en"},"Zhongan UX Densign")))}}]),e}(p.Component));e.a=f},312:function(n,e,t){"use strict";var o=t(305),a=t.n(o),i=t(306),l=t.n(i),r=t(307),s=t.n(r),c=t(32),d=t.n(c),m=t(33),u=t.n(m),p=t(36),h=t.n(p),f=t(34),v=t.n(f),y=t(35),C=t.n(y),g=t(0),k=t.n(g),M=t(37),b=t.n(M),E=t(308),B=t.n(E),N=(t(295),t(294)),_=t(27),w=t.n(_),D=t(309),x=(t(297),function(n){function e(n){u()(this,e);var t=v()(this,(e.__proto__||d()(e)).call(this,n));return t.containerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.title=String(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&b.a.unmountComponentAtNode(this.containerElem)}},{key:"renderSource",value:function(n){var e=this;Promise.all([t.e(6),t.e(4)]).then(t.bind(null,482)).then(function(n){return{args:["context","React","ReactDOM","zarm"],argv:[e,k.a,b.a,n]}}).then(function(t){var o=t.args,a=t.argv;n=n.replace(/import\s+\{\s+(.*)\s+\}\s+from\s+'zarm';/,"const { $1 } = zarm;").replace("mountNode","document.getElementById('"+e.containerId+"')");var i=Object(D.transform)(n,{presets:["es2015","react"]}).code;o.push(i),(new(Function.prototype.bind.apply(Function,[null].concat(w()(o))))).apply(void 0,w()(a)),e.source[2]=n}).catch(function(n){0})}},{key:"render",value:function(){var n=this;return"/panel"===this.props.location.pathname?k.a.createElement("div",{id:this.containerId,ref:function(e){n.containerElem=e}}):k.a.createElement(N.a,{titleRender:k.a.createElement("span",null,this.title)},k.a.createElement("div",{id:this.containerId,ref:function(e){n.containerElem=e}}))}}]),e}(k.a.Component)),z=t(299),R=t(300),S=function(n){function e(n){u()(this,e);var t=v()(this,(e.__proto__||d()(e)).call(this,n));return t.nodeList=[],t.components=new s.a,t.renderer=new B.a.Renderer,t}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){b.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var o,i=a()(this.components);!(n=(o=i.next()).done);n=!0){var r=o.value,s=l()(r,2),c=s[0],d=s[1],m=document.getElementById(c);this.nodeList.push(m),m instanceof HTMLElement&&b.a.render(d,m)}}catch(n){e=!0,t=n}finally{try{!n&&i.return&&i.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this,e=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),t=e.document,o=e.className;if("string"==typeof t){this.components.clear();var a=B()(t.replace(/:::\s?api\s?([^]+?):::/g,function(n,e){return e}).replace(/:::\s?demo\s?([^]+?):::/g,function(e,t,o){var a=o.toString(36);return n.components.set(a,k.a.createElement(x,n.props,t)),"<div id="+a+"></div>"}),{renderer:this.renderer});return k.a.createElement(z.a,{className:o},k.a.createElement("main",{dangerouslySetInnerHTML:{__html:a}}),k.a.createElement(R.a,null))}return k.a.createElement("span",null)}}]),e}(k.a.Component);e.a=S},343:function(n,e){n.exports="## 模态框 Modal\n\n:::demo 基本用法\n```jsx\nimport { Modal, Cell, Button, Select } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal1: false,\n      modal2: false,\n      modal3: false,\n      modal4: false,\n      modal5: false,\n      animationType: 'fade',\n    };\n  }\n\n  open(key) {\n    this.setState({\n      [`${key}`]: true,\n    });\n  }\n\n  close(key) {\n    this.setState({\n      [`${key}`]: false,\n    });\n  }\n\n  render() {\n    const { modal1, modal2, modal3, modal4, modal5, animationType } = this.state;\n    return (\n      <div>\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('modal1')}>开启</Button>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('modal3')}>开启</Button>\n          }\n        >\n          圆角\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('modal2')}>开启</Button>\n          }\n        >\n          遮罩层可关闭\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('modal4')}>开启</Button>\n          }\n        >\n          无头部\n        </Cell>\n\n        <Cell\n          title=\"动画效果\"\n          description={\n            <div>\n              <Button size=\"xs\" onClick={() => this.open('modal5')}>开启</Button>\n            </div>\n          }\n        >\n          <Select\n            value={animationType}\n            dataSource={[\n              { value: 'fade', label: '淡出淡入效果(fade)' },\n              { value: 'zoom', label: '缩放效果(zoom)' },\n              { value: 'rotate', label: '旋转效果(rotate)' },\n              { value: 'door', label: '开关门效果(door)' },\n              { value: 'flip', label: '翻转效果(flip)' },\n              { value: 'moveUp', label: '移出移入效果(moveUp)' },\n              { value: 'moveDown', label: '移出移入效果(moveDown)' },\n              { value: 'moveLeft', label: '移出移入效果(moveLeft)' },\n              { value: 'moveRight', label: '移出移入效果(moveRight)' },\n              { value: 'slideUp', label: '滑出滑入效果(slideUp)' },\n              { value: 'slideDown', label: '滑出滑入效果(slideDown)' },\n              { value: 'slideLeft', label: '滑出滑入效果(slideLeft)' },\n              { value: 'slideRight', label: '滑出滑入效果(slideRight)' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                animationType: selected.map(item => item.value),\n              });\n            }}\n          />\n        </Cell>\n\n        <Modal visible={modal1}>\n          <Modal.Header title=\"标题\" onClose={() => this.close('modal1')} />\n          <Modal.Body>模态框内容</Modal.Body>\n        </Modal>\n\n        <Modal visible={modal2} onMaskClick={() => this.close('modal2')}>\n          <Modal.Header title=\"标题\" />\n          <Modal.Body>点击遮罩层关闭</Modal.Body>\n        </Modal>\n\n        <Modal shape=\"radius\" visible={modal3}>\n          <Modal.Header title=\"标题\" onClose={() => this.close('modal3')} />\n          <Modal.Body>模态框内容</Modal.Body>\n        </Modal>\n\n        <Modal visible={modal4} onMaskClick={() => this.close('modal4')}>\n          <Modal.Body>无头部</Modal.Body>\n        </Modal>\n\n        <Modal visible={modal5} animationType={animationType} onMaskClick={() => this.close('modal5')}>\n          <Modal.Body>\n            <div style={{ height: 100 }}>当前使用的动画类型animationType：'{animationType}'</div>\n          </Modal.Body>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 特定场景\n```jsx\nimport { Cell, Button, Alert, Confirm  } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      alert: false,\n      confirm: false,\n    };\n  }\n\n  open(key) {\n    this.setState({\n      [`${key}`]: true,\n    });\n  }\n\n  close(key) {\n    this.setState({\n      [`${key}`]: false,\n    });\n  }\n\n  render() {\n    const { alert, confirm } = this.state;\n    return (\n      <div>\n        <Cell\n          description={\n            <Button size=\"xs\" theme=\"warning\" onClick={() => this.open('alert')}>开启</Button>\n          }\n        >\n          警告框 Alert\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" theme=\"warning\" onClick={() => this.open('confirm')}>开启</Button>\n          }\n        >\n          确认框 Confirm\n        </Cell>\n\n        <Alert\n          shape=\"radius\"\n          visible={alert}\n          title=\"警告\"\n          message=\"这里是警告信息\"\n          onCancel={() => this.close('alert')}\n        />\n\n        <Confirm\n          shape=\"radius\"\n          visible={confirm}\n          title=\"确认信息\"\n          message=\"你确定要这样做吗？\"\n          onOk={() => alert('click ok')}\n          onCancel={() => this.close('confirm')}\n        />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::api API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-modal | | 类名前缀 |\n| className | string | 无 | | 追加类名 |\n| shape | string | 无 | `radius` | 形状 |\n| visible | boolean | false | | 是否显示 |\n| animationType | string | `fade` | `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` | 动画效果 |\n| animationDuration | number | 200 | | 动画执行时间 |\n| width | string &#124; number | `70%` | | 宽度 |\n| onMaskClick | <code>() => void</code> | noop | | 点击遮罩层时触发的回调函数 |\n\n:::"}}]);