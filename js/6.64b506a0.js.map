{"version":3,"sources":["webpack:///./site/demo/pages/Index/index.jsx","webpack:///./site/utils/events.js"],"names":["Child","history","useHistory","lang","useContext","Context","getMenus","key","list","components","title","id","length","sort","a","b","localeCompare","map","component","i","hasArrow","className","pascalCase","name","onClick","push","locale","messages","Locale","Page","setPageScroll","window","sessionStorage","indexPageScroll","scrollY","useEffect","scrollTo","loadPageScroll","Events","on","off","el","type","callback","addEventListener","passive","attachEvent","call","removeEventListener","detachEvent","once","typeArray","split","recursiveFunction","e","target","this"],"mappings":"kHAAA,4HAYMA,GAZN,QAYc,WACZ,IAAMC,EAAUC,cACRC,EAASC,qBAAWC,KAApBF,KAEFG,EAAW,SAACC,GAChB,IAAMC,EAAOC,aAAWF,IAAQ,GAEhC,OACE,kBAAC,IAAD,CAAOG,MACL,oCACE,kBAAC,IAAD,CAAkBC,GAAE,mCAA8BJ,KADpD,SAEIC,EAAKI,OAFT,WAOEJ,EACGK,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEP,IAAIS,cAAcD,EAAER,QAE9BU,KAAI,SAACC,EAAWC,GAAZ,OACH,kBAAC,IAAD,CACEC,UAAQ,EACRb,KAAMY,EACNT,MACE,yBAAKW,UAAU,qBACb,8BAAOC,YAAWJ,EAAUX,MAClB,SAATJ,GAAmB,0BAAMkB,UAAU,WAAWH,EAAUK,OAG7DC,QAAS,kBAAMvB,EAAQwB,KAAR,WAAiBP,EAAUX,cAQxD,OACE,kBAAC,IAAD,CAAcmB,OAAO,QAAQC,SAAUC,IAAOzB,IAC5C,gCACE,6BAASkB,UAAU,SACjB,yBAAKA,UAAU,eAAf,QACA,yBAAKA,UAAU,qBAAoB,kBAAC,IAAD,CAAkBV,GAAG,sBAG5D,8BACGL,EAAS,WACTA,EAAS,QACTA,EAAS,YACTA,EAAS,QACTA,EAAS,cACTA,EAAS,UAEZ,kBAAC,IAAD,SAgCSuB,UA3BF,WACX,IAAMC,EAAgB,WACpBC,OAAOC,eAAeC,gBAAkBF,OAAOG,SAkBjD,OATAC,qBAAU,WAIR,OAVqB,WACrB,IAAMD,EAAUH,OAAOC,eAAeC,gBACjCC,GACLH,OAAOK,SAAS,EAAGF,GAInBG,GACAC,IAAOC,GAAGR,OAAQ,SAAUD,GAErB,WACLQ,IAAOE,IAAIT,OAAQ,SAAUD,MAE9B,IAGD,kBAAC,IAAD,CAAWT,UAAU,cACnB,kBAACrB,EAAD,S,iCC7FS,KACbuC,GADa,SACVE,EAAIC,EAAMC,GACPF,EAAGG,iBACLH,EAAGG,iBAAiBF,EAAMC,EAAU,CAAEE,SAAS,IAE/CJ,EAAGK,YAAH,aAAqBJ,IAAQ,WAC3BC,EAASI,KAAKN,OAKpBD,IAXa,SAWTC,EAAIC,EAAMC,GACRF,EAAGO,oBACLP,EAAGO,oBAAoBN,EAAMC,EAAU,CAAEE,SAAS,IAElDJ,EAAGQ,YAAH,cAAsBP,GAAQC,IAIlCO,KAnBa,SAmBRT,EAAIC,EAAMC,GAOb,IANA,IAAMQ,EAAYT,EAAKU,MAAM,KACvBC,EAAoB,SAApBA,EAAqBC,GAEzB,OADAA,EAAEC,OAAOP,oBAAoBM,EAAEZ,KAAMW,EAAmB,CAAER,SAAS,IAC5DF,EAASW,IAGTnC,EAAIgC,EAAUvC,OAAS,EAAGO,GAAK,EAAGA,GAAK,EAC9CqC,KAAKjB,GAAGE,EAAIU,EAAUhC,GAAIkC","file":"js/6.64b506a0.js","sourcesContent":["import React, { useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { IntlProvider, FormattedMessage } from 'react-intl';\nimport { Panel, Cell } from 'zarm';\nimport { components } from '@site/site.config';\nimport { pascalCase } from 'change-case';\nimport Container, { Context } from '@site/demo/components/Container';\nimport Footer from '@site/demo/components/Footer';\nimport Events from '@site/utils/events';\nimport Locale from '@site/locale';\nimport './style.scss';\n\nconst Child = () => {\n  const history = useHistory();\n  const { lang } = useContext(Context);\n\n  const getMenus = (key) => {\n    const list = components[key] || [];\n\n    return (\n      <Panel title={(\n        <>\n          <FormattedMessage id={`app.demo.components.type.${key}`} />\n          （{list.length}）\n        </>\n      )}\n      >\n        {\n          list\n            .sort((a, b) => {\n              return a.key.localeCompare(b.key);\n            })\n            .map((component, i) => (\n              <Cell\n                hasArrow\n                key={+i}\n                title={(\n                  <div className=\"menu-item-content\">\n                    <span>{pascalCase(component.key)}</span>\n                    {lang !== 'enUS' && <span className=\"chinese\">{component.name}</span>}\n                  </div>\n                )}\n                onClick={() => history.push(`/${component.key}`)}\n              />\n            ))\n        }\n      </Panel>\n    );\n  };\n\n  return (\n    <IntlProvider locale=\"zh-CN\" messages={Locale[lang]}>\n      <header>\n        <section className=\"brand\">\n          <div className=\"brand-title\">Zarm</div>\n          <div className=\"brand-description\"><FormattedMessage id=\"app.demo.title\" /></div>\n        </section>\n      </header>\n      <main>\n        {getMenus('general')}\n        {getMenus('form')}\n        {getMenus('feedback')}\n        {getMenus('view')}\n        {getMenus('navigation')}\n        {getMenus('other')}\n      </main>\n      <Footer />\n    </IntlProvider>\n  );\n};\n\nconst Page = () => {\n  const setPageScroll = () => {\n    window.sessionStorage.indexPageScroll = window.scrollY;\n  };\n\n  const loadPageScroll = () => {\n    const scrollY = window.sessionStorage.indexPageScroll;\n    if (!scrollY) return;\n    window.scrollTo(0, scrollY);\n  };\n\n  useEffect(() => {\n    loadPageScroll();\n    Events.on(window, 'scroll', setPageScroll);\n\n    return () => {\n      Events.off(window, 'scroll', setPageScroll);\n    };\n  }, []);\n\n  return (\n    <Container className=\"index-page\">\n      <Child />\n    </Container>\n  );\n};\n\nexport default Page;\n","export default {\n  on(el, type, callback) {\n    if (el.addEventListener) {\n      el.addEventListener(type, callback, { passive: false });\n    } else {\n      el.attachEvent(`on ${type}`, () => {\n        callback.call(el);\n      });\n    }\n  },\n\n  off(el, type, callback) {\n    if (el.removeEventListener) {\n      el.removeEventListener(type, callback, { passive: false });\n    } else {\n      el.detachEvent(`off ${type}`, callback);\n    }\n  },\n\n  once(el, type, callback) {\n    const typeArray = type.split(' ');\n    const recursiveFunction = (e) => {\n      e.target.removeEventListener(e.type, recursiveFunction, { passive: false });\n      return callback(e);\n    };\n\n    for (let i = typeArray.length - 1; i >= 0; i -= 1) {\n      this.on(el, typeArray[i], recursiveFunction);\n    }\n  },\n};\n"],"sourceRoot":""}