(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{374:function(n,e,t){"use strict";t.r(e);var i=t(3),r=t.n(i),o=t(4),s=t.n(o),a=t(2),l=t.n(a),c=t(5),d=t.n(c),m=t(395),f=(t(687),function(n){function e(){var n,i,o,a;s()(this,e);for(var c=arguments.length,d=Array(c),m=0;m<c;m++)d[m]=arguments[m];return i=o=l()(this,(n=e.__proto__||r()(e)).call.apply(n,[this].concat(d))),o.document=function(){return{document:t(422),className:"file-picker-page"}},a=i,l()(o,a)}return d()(e,n),e}(m.a));e.default=f},395:function(n,e,t){"use strict";var i=t(396),r=t.n(i),o=t(397),s=t.n(o),a=t(398),l=t.n(a),c=t(3),d=t.n(c),m=t(4),f=t.n(m),u=t(6),p=t.n(u),h=t(2),v=t.n(h),g=t(5),k=t.n(g),y=t(0),b=t.n(y),N=t(42),C=t.n(N),x=t(399),S=t.n(x),_=t(400),w=t.n(_),F=(t(401),function(n){function e(n){f()(this,e);var t=v()(this,(e.__proto__||d()(e)).call(this,n));return t.nodeList=[],t.components=new l.a,t}return k()(e,n),p()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){C.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var i,o=r()(this.components);!(n=(i=o.next()).done);n=!0){var a=i.value,l=s()(a,2),c=l[0],d=l[1],m=document.getElementById(c);this.nodeList.push(m),m instanceof HTMLElement&&C.a.render(d,m)}}catch(n){e=!0,t=n}finally{try{!n&&o.return&&o.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var i=new S.a.Renderer;i.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var r=S()(e,{renderer:i,highlight:function(n){return w.a.highlightAuto(n).value}});return b.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:r}})}return b.a.createElement("span",null)}}]),e}(b.a.Component));e.a=F},422:function(n,e){n.exports='## 文件选择器 FilePicker\n\n\n\n### 基本用法\n```jsx\nimport { Cell, FilePicker, Icon } from \'zarm\';\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n    };\n  }\n\n  onSelect(file) {\n    console.log(file);\n    const { files } = this.state;\n    files.push(file);\n\n    this.setState({\n      files,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.files.map((item, index) => <Cell key={+index}>{item.fileName}</Cell>)}\n        <div className="file-picker-wrapper">\n          <FilePicker\n            className="file-picker-btn"\n            onChange={selected => this.onSelect(selected)}\n          >\n            <Icon type="add" />\n          </FilePicker>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 多选模式\n```jsx\nimport { Cell, FilePicker, Icon, Toast, Badge } from \'zarm\';\n\nconst MAX_FILES_COUNT = 5;\n\nfunction onBeforeSelect() {\n  alert(\'执行 onBeforeSelect 方法\');\n}\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n    };\n  }\n\n  onSelect(selFiles) {\n    let { files } = this.state;\n    files = files.concat(selFiles);\n    if (files.length > MAX_FILES_COUNT) {\n      Toast.show(\'最多只能选择5张图片\')\n      return;\n    }\n    this.setState({ files });\n  }\n\n  remove(index) {\n    const { files } = this.state;\n    files.splice(index, 1);\n    this.setState({ files });\n    Toast.show(\'删除成功\');\n  }\n\n  imgRender() {\n    const { files } = this.state;\n\n    return files.map((item, index) => {\n      return (\n        <Badge\n          key={+index}\n          sup\n          className="file-picker-item"\n          shape="circle"\n          text={<Icon type="wrong" />}\n          onClick={() => this.remove(index)}\n        >\n          <div className="file-picker-item-img">\n            <a href={item.thumbnail} target="_blank" rel="noopener noreferrer">\n              <img src={item.thumbnail} alt="" />\n            </a>\n          </div>\n        </Badge>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className="file-picker-wrapper">\n          {this.imgRender()}\n          {\n            (this.state.files.length < MAX_FILES_COUNT) && (\n              <FilePicker\n                multiple\n                className="file-picker-btn"\n                accept="image/*"\n                onBeforeSelect={onBeforeSelect}\n                onChange={selected => this.onSelect(selected)}\n              >\n                <Icon type="add" />\n              </FilePicker>\n            )\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 禁用状态\n```jsx\nimport { FilePicker, Icon } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div className="file-picker-wrapper">\n        <FilePicker className="file-picker-btn" disabled>\n          <Icon type="add" />\n        </FilePicker>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-file-picker | | 类名前缀 |\n| className | string | | | 追加类名 |\n| accept | string | | | 允许上传的附件格式 |\n| multiple | boolean | false | | 是否多选 |\n| capture | string | | 照相机`camera`, 摄像机`camcorder`, 录音`microphone`| 唤起的原生应用 |\n| disabled | boolean | false | | 是否禁用 |\n| onBeforeSelect | <code>() => boolean</code> | () => { return true; } | | 选择前触发的事件 |\n| onChange | <code>(file: Object &#124; Array&lt;Object&gt;) => void</code> | noop | \\(file: Object &#124; Array&lt;Object&gt;\\) | 值变化时触发的回调函数 |'},687:function(n,e,t){}}]);