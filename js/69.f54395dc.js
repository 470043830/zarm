(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{394:function(n,e,t){"use strict";t.r(e);var o=t(4),r=t.n(o),i=t(5),a=t.n(i),s=t(2),c=t.n(s),u=t(6),l=t.n(u),d=t(411),m=(t(537),function(n){function e(){var n,o,i,s;a()(this,e);for(var u=arguments.length,l=Array(u),d=0;d<u;d++)l[d]=arguments[d];return o=i=c()(this,(n=e.__proto__||r()(e)).call.apply(n,[this].concat(l))),i.document=function(){return{document:t(447),className:"toast-page"}},s=o,c()(i,s)}return l()(e,n),e}(d.a));e.default=m},401:function(n,e,t){"use strict";t(241),t(329)},411:function(n,e,t){"use strict";var o=t(406),r=t.n(o),i=t(407),a=t.n(i),s=t(408),c=t.n(s),u=t(4),l=t.n(u),d=t(5),m=t.n(d),p=t(7),h=t.n(p),f=t(2),v=t.n(f),g=t(6),C=t.n(g),y=t(0),k=t.n(y),_=t(55),N=t.n(_),x=t(409),E=t.n(x),M=t(410),w=t(1),D=t.n(w),T=t(413),b=t.n(T),B=(t(414),t(415),t(416),t(333),function(n){function e(){return m()(this,e),v()(this,(e.__proto__||l()(e)).apply(this,arguments))}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){var n=this,e=this.props,t=e.onChange,o=e.value;this.cm=b()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(o),this.cm.on("changes",function(e){t&&(clearTimeout(n.timeout),n.timeout=setTimeout(function(){t(e.getValue())},300))})}},{key:"render",value:function(){var n=this;return k.a.createElement("div",{className:"editor",ref:function(e){n.editor=e}})}}]),e}(y.Component)),z=B;B.propTypes={onChange:D.a.func,value:D.a.string},B.defaultProps={onChange:function(){},value:""};t(401);var I=function(n){function e(n){m()(this,e);var t=v()(this,(e.__proto__||l()(e)).call(this,n));return t.toggleShowCode=function(){t.setState({isOpen:!t.state.isOpen})},t.containerId=""+parseInt(1e9*Math.random(),10).toString(36),t.document=t.props.children.match(/([^]*)\n?(```[^]+```)/),t.title=String(t.document[1]),t.source=t.document[2].match(/```(.*)\n?([^]+)```/),t.state={isOpen:!1},t}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&N.a.unmountComponentAtNode(this.containerElem)}},{key:"renderSource",value:function(n){var e=this;Promise.all([t.e(5),t.e(6),t.e(71)]).then(t.bind(null,544)).then(function(n){return{args:["context","React","ReactDOM","zarm"],argv:[e,k.a,N.a,n]}}).then(function(t){var o=t.args;t.argv;n=n.replace(/import\s+\{\s+(.*)\s+\}\s+from\s+'zarm';/,"const { $1 } = zarm;").replace("mountNode","document.getElementById('"+e.containerId+"')");var r=Object(M.transform)(n,{presets:["es2015","react"]}).code;o.push(r),e.source[2]=n}).catch(function(n){0})}},{key:"render",value:function(){var n=this;return k.a.createElement("div",null,k.a.createElement("h3",null,this.title),k.a.createElement("div",{className:"demo"},k.a.createElement("div",{className:"demo-code"},k.a.createElement("div",{className:"demo-code-editor",ref:function(e){n.code=e},dangerouslySetInnerHTML:{__html:this.description}}),k.a.createElement(z,{value:this.source[2],onChange:function(e){return n.renderSource(e)}}))))}}]),e}(y.Component),L=function(n){function e(n){m()(this,e);var t=v()(this,(e.__proto__||l()(e)).call(this,n));return t.nodeList=[],t.components=new c.a,t.renderer=new E.a.Renderer,t}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){N.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var o,i=r()(this.components);!(n=(o=i.next()).done);n=!0){var s=o.value,c=a()(s,2),u=c[0],l=c[1],d=document.getElementById(u);this.nodeList.push(d),d instanceof HTMLElement&&N.a.render(l,d)}}catch(n){e=!0,t=n}finally{try{!n&&i.return&&i.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this,e=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),t=e.document,o=e.className;if("string"==typeof t){this.components.clear();var r=E()(t.replace(/:::\s?api\s?([^]+?):::/g,function(n,e){return e}).replace(/:::\s?demo\s?([^]+?):::/g,function(e,t,o){var r=o.toString(36);return n.components.set(r,k.a.createElement(I,n.props,t)),"<div id="+r+"></div>"}),{renderer:this.renderer});return k.a.createElement("div",{className:o,dangerouslySetInnerHTML:{__html:r}})}return k.a.createElement("span",null)}}]),e}(k.a.Component);e.a=L},447:function(n,e){n.exports='## 轻提示 Toast\n\n:::demo 基本用法\n```jsx\nimport { Toast, Cell, Button, Icon } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              theme="error"\n              onClick={() => {\n                Toast.show(\'默认3秒自动关闭\');\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          错误提示\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              theme="success"\n              onClick={() => {\n                Toast.show(\n                  <div className="box">\n                    <Icon className="box-icon" type="right-round-fill" />\n                    <div className="box-text">\n                      预约成功\n                    </div>\n                  </div>\n                );\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          成功提示\n        </Cell>\n\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Toast.show(\'指定10秒自动关闭\', 10000);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          指定关闭时间\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 加载中\n```jsx\nimport { Loading, Cell, Button } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button\n              size="xs"\n              onClick={() => {\n                Loading.show();\n                setTimeout(()=>{\n                  Loading.hide();\n                }, 1100);\n              }}\n            >\n              开启\n            </Button>\n          }\n        >\n          Loading\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::api API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-toast | | 类名前缀 |\n| className | string | | | 追加类名 |\n| visible | boolean | false | | 是否显示 |\n| stayTime | number | 3000 | | 自动关闭前停留的时间（单位：毫秒） |\n| onClose | <code>() => void</code> | noop | | 关闭时触发的回调函数 |\n| onMaskClick | <code>() => void</code> | noop | | 点击遮罩层时触发的回调函数 |\n\n:::'},537:function(n,e,t){}}]);