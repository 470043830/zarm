(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{699:function(t,e){t.exports='# Popper 气泡层\n\n\n## 基本用法\n```jsx\nimport { Cell, Button, Popper, Select } from \'zarm\';\n\nclass Demo extends React.Component {\n  state = {\n    visible: false,\n    direction: \'top\',\n    trigger: \'click\',\n  }\n\n  render() {\n    const { visible, direction, trigger } = this.state;\n\n    return (\n      <>\n        <Cell className="basic-demo">\n          <Popper\n            title="我是一段文案"\n            visible={visible}\n            trigger={trigger}\n            direction={direction}\n            className="custom-popper"\n          >\n            <Button theme="primary" size="xs" onClick={() => trigger === \'manual\' && this.setState({ visible: !visible })}>\n              点击{visible ? \'隐藏\' : \'显示\'}\n            </Button>\n          </Popper>\n        </Cell>\n        <Cell hasArrow title="显示方向">\n          <Select\n            value={direction}\n            dataSource={[\n              { value: \'topLeft\', label: \'topLeft\' },\n              { value: \'top\', label: \'top\' },\n              { value: \'topRight\', label: \'topRight\' },\n              { value: \'rightTop\', label: \'rightTop\' },\n              { value: \'right\', label: \'right\' },\n              { value: \'rightBottom\', label: \'rightBottom\' },\n              { value: \'bottomLeft\', label: \'bottomLeft\' },\n              { value: \'bottom\', label: \'bottom\' },\n              { value: \'bottomRight\', label: \'bottomRight\' },\n              { value: \'leftTop\', label: \'leftTop\' },\n              { value: \'left\', label: \'left\' },\n              { value: \'leftBottom\', label: \'leftBottom\' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                direction: selected[0].value,\n              });\n            }}\n          />\n        </Cell>\n        <Cell hasArrow title="触发方式">\n          <Select\n            value={trigger}\n            dataSource={[\n              { value: \'click\', label: \'click（点击状态触发）\' },\n              { value: \'hover\', label: \'hover（hover状态触发）\' },\n              { value: \'focus\', label: \'focus（聚焦状态触发）\' },\n              { value: \'manual\', label: \'manual（受控触发）\' },\n              { value: \'contextMenu\', label: \'contextMenu（右键触发）\' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                trigger: selected[0].value,\n                visible: false,\n              });\n            }}\n          />\n        </Cell>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n## 自定义箭头\n```jsx\nimport { Cell, Button, Popper } from \'zarm\';\n\nclass Demo extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Cell className="direction-demo">\n          <div>\n            <div style={{ marginLeft: 60 }}>\n              <Popper className="custom-arrow-popper" hasArrow direction="topLeft" title="topLeft text">\n                <Button block size="xs">TL</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="top" title="top text">\n                <Button block size="xs">Top</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="topRight" title="topRight text">\n                <Button block size="xs">TR</Button>\n              </Popper>\n            </div>\n\n            <div style={{ width: 60, float: "left",  clear: \'both\' }}>\n              <Popper className="custom-arrow-popper" hasArrow direction="leftTop" title="leftTop text">\n                <Button block size="xs">LT</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="left" title="left text">\n                <Button block size="xs">Left</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="leftBottom" title="leftBottom text">\n                <Button block size="xs">LB</Button>\n              </Popper>\n            </div>\n\n            <div style={{ width: 60, marginLeft: 60 * 4 }}>\n              <Popper className="custom-arrow-popper" hasArrow direction="rightTop" title="rightTop text">\n                <Button block size="xs">RT</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="right" title="right text">\n                <Button block size="xs">Right</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="rightBottom" title="rightBottom text">\n                <Button block size="xs">RB</Button>\n              </Popper>\n            </div>\n\n            <div style={{ marginLeft: 60, clear: \'both\' }}>\n              <Popper className="custom-arrow-popper" hasArrow direction="bottomLeft" title="bottomLeft text">\n                <Button block size="xs">BL</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="bottom" title="bottom text">\n                <Button block size="xs">Bottom</Button>\n              </Popper>\n\n              <Popper className="custom-arrow-popper" hasArrow direction="bottomRight" title="bottomRight text">\n                <Button block size="xs">BR</Button>\n              </Popper>\n            </div>\n\n          </div>\n        </Cell>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n### API\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| visible | boolean | false | 是否显示 |\n| title | ReactNode | - | 显示标题 |\n| content | ReactNode | - | 显示内容 |\n| hasArrow | boolean | false | 是否带有箭头 |\n| className | string | - | 气泡层类名追加 |\n| mouseEnterDelay | number | 100ms | 鼠标移入后延时多少才显示气泡层，单位：毫秒 |\n| mouseLeaveDelay | number | 100ms | 鼠标移出后延时多少才隐藏气泡层，单位：毫秒 |\n| direction | string | \'top\' | 显示方向，可选值 `topLeft`、`top`、`topRight`、`rightTop`、`right`、`rightBottom`、`bottomLeft`、`bottom`、`bottomRight`、`leftTop`、`left`、`leftBottom` |\n| trigger | string | \'click\' | 触发方式，PC端默认值为 \'hover\', 可选值为：点击触发`click`、hover状态触发`hover`、聚焦状态触发`focus`、受控触发`manual`、右键触发`contextMenu` |\n| onVisibleChange | (visible?: boolean) => void | noop | 显示/隐藏触发的事件 |\n'}}]);