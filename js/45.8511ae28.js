(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{377:function(n,e,t){"use strict";t.r(e);var a=t(3),o=t.n(a),r=t(4),i=t.n(r),s=t(2),c=t.n(s),m=t(5),l=t.n(m),u=t(403),d=(t(684),function(n){function e(){var n,a,r,s;i()(this,e);for(var m=arguments.length,l=Array(m),u=0;u<m;u++)l[u]=arguments[u];return a=r=c()(this,(n=e.__proto__||o()(e)).call.apply(n,[this].concat(l))),r.document=function(){return{document:t(423),className:"carousel-page"}},s=a,c()(r,s)}return l()(e,n),e}(u.a));e.default=d},403:function(n,e,t){"use strict";var a=t(239),o=t.n(a),r=t(240),i=t.n(r),s=t(404),c=t.n(s),m=t(3),l=t.n(m),u=t(4),d=t.n(u),h=t(6),g=t.n(h),p=t(2),v=t.n(p),b=t(5),f=t.n(b),z=t(0),C=t.n(z),w=t(42),y=t.n(w),x=t(405),D=t.n(x),I=t(406),M=t.n(I),R=(t(407),function(n){function e(n){d()(this,e);var t=v()(this,(e.__proto__||l()(e)).call(this,n));return t.nodeList=[],t.components=new c.a,t}return f()(e,n),g()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){y.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var a,r=o()(this.components);!(n=(a=r.next()).done);n=!0){var s=a.value,c=i()(s,2),m=c[0],l=c[1],u=document.getElementById(m);this.nodeList.push(u),u instanceof HTMLElement&&y.a.render(l,u)}}catch(n){e=!0,t=n}finally{try{!n&&r.return&&r.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var a=new D.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var o=D()(e,{renderer:a,highlight:function(n){return M.a.highlightAuto(n).value}});return C.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:o}})}return C.a.createElement("span",null)}}]),e}(C.a.Component));e.a=R},423:function(n,e){n.exports="## 走马灯 Carousel\n\n\n\n### 基本用法\n```jsx\nimport { Carousel } from 'zarm';\n\nconst ITEMS = [\n  'https://static.zhongan.com/website/health/zarm/images/banners/1.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/2.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/3.png',\n];\n\nfunction contentRender() {\n  return ITEMS.map((item, i) => {\n    return (\n      <div className=\"carousel-item-pic\" key={+i}>\n        <img src={item} alt=\"\" draggable={false} />\n      </div>\n    );\n  });\n}\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Carousel\n          onChange={(index) => {\n            console.log(`onChange: ${index}`);\n          }}\n        >\n          {contentRender()}\n        </Carousel>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 纵向\n```jsx\nimport { Carousel } from 'zarm';\n\nconst ITEMS = [\n  'https://static.zhongan.com/website/health/zarm/images/banners/1.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/2.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/3.png',\n];\n\nfunction contentRender() {\n  return ITEMS.map((item, i) => {\n    return (\n      <div className=\"carousel-item-pic\" key={+i}>\n        <img src={item} alt=\"\" draggable={false} />\n      </div>\n    );\n  });\n}\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Carousel\n          direction=\"up\"\n          height=\"48vw\"\n        >\n          {contentRender()}\n        </Carousel>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 循环轮播\n```jsx\nimport { Carousel, Button } from 'zarm';\n\nconst ITEMS = [\n  'https://static.zhongan.com/website/health/zarm/images/banners/1.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/2.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/3.png',\n];\n\nfunction contentRender() {\n  return ITEMS.map((item, i) => {\n    return (\n      <div className=\"carousel-item-pic\" key={+i}>\n        <img src={item} alt=\"\" draggable={false} />\n      </div>\n    );\n  });\n}\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Carousel\n          ref={(ele) => { this.carousel = ele; }}\n          loop\n          direction=\"left\"\n          onChange={(index) => {\n            console.log(`onChange: ${index}`);\n          }}\n        >\n          {contentRender()}\n        </Carousel>\n        <div className=\"controls\">\n          <Button\n            block\n            size=\"sm\"\n            onClick={() => {\n              this.carousel.onJumpTo(0);\n            }}\n          >\n            无动画切换指定页\n          </Button>\n\n          <Button\n            block\n            size=\"sm\"\n            onClick={() => {\n              this.carousel.onSlideTo(2);\n            }}\n          >\n            滑动到指定页\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 自动循环轮播\n```jsx\nimport { Carousel } from 'zarm';\n\nconst ITEMS = [\n  'https://static.zhongan.com/website/health/zarm/images/banners/1.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/2.png',\n  'https://static.zhongan.com/website/health/zarm/images/banners/3.png',\n];\n\nfunction contentRender() {\n  return ITEMS.map((item, i) => {\n    return (\n      <div className=\"carousel-item-pic\" key={+i}>\n        <img src={item} alt=\"\" draggable={false} />\n      </div>\n    );\n  });\n}\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Carousel\n          autoPlay\n          loop\n          direction=\"left\"\n          onChangeEnd={(index) => {\n            console.log(`onChangeEnd: ${index}`);\n          }}\n        >\n          {contentRender()}\n        </Carousel>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-carousel | | 类名前缀 |\n| className | string | | | 追加类名 |\n| direction | string | 'left' | 'left', 'right', 'up', 'down' | 滑动方向 |\n| height | number &#124; string | | | 高度 |\n| activeIndex | number | 0 | | 当前页面的索引 |\n| loop | boolean | false | | 是否循环 |\n| autoPlay | boolean | false | | 是否自动轮播 |\n| autoPlayIntervalTime | number | 3000 | | 自动轮播时间间隔，单位：毫秒 |\n| moveDistanceRatio | number | 0.5 | | 移动距离比例临界点 |\n| moveTimeSpan | number | 300 | | 移动时间跨度临界点，单位：毫秒 |\n| animationDuration | number | 300 | | 动画执行时间，单位：毫秒 |\n| showPagination | boolean | true | | 是否显示分页器 |\n| onChange | <code>(activeIndex: number) => void</code> | noop | \\(activeIndex: number\\) | 值变化时触发的回调函数 |\n| onChangeEnd | <code>(activeIndex: number) => void</code> | noop | \\(activeIndex: number\\) | 值变化动画结束后触发的回调函数 |\n"},684:function(n,e,t){}}]);