{"version":3,"sources":["webpack:///./components/collapse/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/42.bf4b031c.js","sourcesContent":["export default \"# Collapse 折叠面板\\n\\n\\n\\n## 基本用法\\n```jsx\\nimport { Cell, Switch, Collapse, Checkbox } from 'zarm';\\n\\nclass Demo extends React.Component {\\n  state = {\\n    animated: false,\\n    multiple: false,\\n    activeKey: '1',\\n  }\\n\\n  onChange = (activeKey) => {\\n    console.log(activeKey);\\n    this.setState({ activeKey })\\n  }\\n\\n  render() {\\n    const { animated, multiple, activeKey } = this.state;\\n    return (\\n      <>\\n        <Checkbox.Group block style={{ padding: '8px 16px 8px 16px' }}>\\n          <Checkbox value=\\\"animated\\\" checked={animated} onChange={(e) => { this.setState({ animated: e.target.checked })}}>开启切换动画</Checkbox>\\n          <Checkbox value=\\\"multiple\\\" checked={multiple} onChange={(e) => { this.setState({ multiple: e.target.checked, activeKey: e.target.checked ? [] : undefined })}}>允许展开多项</Checkbox>\\n        </Checkbox.Group>\\n        <Collapse disabled activeKey={activeKey} animated={animated} multiple={multiple} onChange={this.onChange}>\\n          <Collapse.Item key=\\\"1\\\" title=\\\"Header of Item1\\\">\\n            This is content of item1. This is content of item1. This is content of item1.\\n          </Collapse.Item>\\n          <Collapse.Item key=\\\"2\\\" title=\\\"Header of Item2\\\">\\n            This is content of item2. This is content of item2. This is content of item2.\\n          </Collapse.Item>\\n          <Collapse.Item key=\\\"3\\\" title=\\\"Header of Item3\\\">\\n            This is content of item3. This is content of item3. This is content of item3.\\n          </Collapse.Item>\\n        </Collapse>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## 默认展开项\\n```jsx\\nimport { Collapse } from 'zarm';\\n\\nReactDOM.render(\\n  <Collapse multiple defaultActiveKey={['0', '1']}>\\n    <Collapse.Item key=\\\"0\\\" title=\\\"Header of Item1\\\">\\n      This is content of item1. This is content of item1. This is content of item1.\\n    </Collapse.Item>\\n    <Collapse.Item key=\\\"1\\\" title=\\\"Header of Item2\\\">\\n      This is content of item2. This is content of item2. This is content of item2.\\n    </Collapse.Item>\\n    <Collapse.Item key=\\\"2\\\" title=\\\"Header of Item3\\\">\\n      This is content of item3. This is content of item3. This is content of item3.\\n    </Collapse.Item>\\n  </Collapse>\\n, mountNode);\\n```\\n\\n\\n\\n## 禁用子项\\n```jsx\\nimport { Collapse } from 'zarm';\\n\\nReactDOM.render(\\n  <Collapse multiple defaultActiveKey={['test2']}>\\n    <Collapse.Item key=\\\"test1\\\" title=\\\"Header of Item1\\\">\\n      This is content of item1. This is content of item1. This is content of item1.\\n    </Collapse.Item>\\n    <Collapse.Item key=\\\"test2\\\" title=\\\"Header of Item2\\\" disabled>\\n      This is content of item2. This is content of item2. This is content of item2.\\n    </Collapse.Item>\\n    <Collapse.Item key=\\\"test3\\\" title=\\\"Header of Item3\\\" disabled>\\n      This is content of item3. This is content of item3. This is content of item3.\\n    </Collapse.Item>\\n  </Collapse>\\n, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n## Collapse\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| multiple | boolean | false | 是否可以同时展开多项 |\\n| animated | boolean | false | 是否添加展开动画 |\\n| activeKey | string \\\\| number \\\\| string[] \\\\| number[] | [] | 动态更新展开项的索引数组或字符串或数字 |\\n| defaultActiveKey | string \\\\| number \\\\| string[] \\\\| number[] | [] | 初始化默认展开项的索引数组或字符串或数字 |\\n| onChange | (activeKey?: string \\\\| number \\\\| string[] \\\\| number[]) => void | - | 点击某一项的回调函数，返回选中的项 |\\n\\n## Collapse.Item\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| title | ReactNode | - | 每一项的名称 |\\n| key | string \\\\| number | - | 对应activeKey |\\n| disabled | boolean | false | 是否禁用 |\\n| onChange | (active?: boolean) => void | - | 点击某一项的回调函数 |\\n\""],"sourceRoot":""}