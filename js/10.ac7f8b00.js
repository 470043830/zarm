(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{274:function(n,e,t){"use strict";t.r(e);var a=t(3),l=t.n(a),r=t(4),i=t.n(r),o=t(2),s=t.n(o),u=t(5),d=t.n(u),c=function(n){function e(){var n,a,r,o;i()(this,e);for(var u=arguments.length,d=Array(u),c=0;c<u;c++)d[c]=arguments[c];return a=r=s()(this,(n=e.__proto__||l()(e)).call.apply(n,[this].concat(d))),r.document=function(){return{document:t(432),className:"calendar-page"}},o=a,s()(r,o)}return d()(e,n),e}(t(412).a);e.default=c},412:function(n,e,t){"use strict";var a=t(3),l=t.n(a),r=t(4),i=t.n(r),o=t(6),s=t.n(o),u=t(2),d=t.n(u),c=t(5),m=t.n(c),v=t(0),p=t.n(v),h=t(415),f=t.n(h),g=t(416),D=t.n(g),b=(t(417),t(413),function(n){function e(){return i()(this,e),d()(this,(e.__proto__||l()(e)).apply(this,arguments))}return m()(e,n),s()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var a=new f.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"},a.code=function(n,e){return'<pre><code class="hljs '+e+'">'+(!(!e||!D.a.getLanguage(e))?D.a.highlight(e,n).value:n)+"</code></pre>"};var l=f()(e,{renderer:a});return p.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:l}})}return p.a.createElement("span",null)}}]),e}(v.Component));e.a=b},413:function(n,e,t){},432:function(n,e){n.exports="## 日历 Calendar\n\n### 平铺选择\n\n```jsx\nimport { Button, Select, Icon, Input, Cell, Calendar } from 'zarm';\n\nconst dataSource = [\n  {\n    value: 'false',\n    label: '单选'\n  },\n  {\n    value: 'true',\n    label: '双选'\n  }\n];\n\nwindow.testc = Demo;\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      multiple: true,\n      defaultValue: ['2018-11-21', '2018-12-7'],\n      value: '',\n      min: '2018-5-12',\n      max: '2019-5-11',\n      dateRender: date => {\n        if (/(0|6)/.test(date.getDay())) {\n          return (\n            <div className=\"custom\">\n              <div className=\"custom-date\">{date.getDate()}</div>\n              <div className=\"custom-text\">休息</div>\n            </div>\n          );\n        }\n        return date.getDate();\n      },\n      disabledDate: date => /(0|6)/.test(date.getDay())\n    };\n  }\n\n  render() {\n    const { multiple, min, max, visible } = this.state;\n\n    return (\n      <div>\n        <div>\n          <Cell title=\"multiple\">\n            <Select\n              visible={visible}\n              placeholder=\"multiple\"\n              value={multiple ? 'true' : 'false'}\n              dataSource={dataSource}\n              onOk={e => {\n                this.setState({\n                  multiple: e[0].value === 'true',\n                  visible: false\n                });\n              }}\n            />\n            <Icon className=\"icon\" theme=\"primary\" type=\"arrow-right\" />\n          </Cell>\n          <Cell title=\"min\">\n            <Input\n              type=\"text\"\n              placeholder=\"请输入日历起始日期\"\n              value={min}\n              onBlur={e => this.setState({ min: e })}\n            />\n          </Cell>\n          <Cell title=\"max\">\n            <Input\n              type=\"text\"\n              placeholder=\"请输入日历终止日期\"\n              value={max}\n              onBlur={e => this.setState({ max: e })}\n            />\n          </Cell>\n        </div>\n        <div>\n          <Calendar\n            {...this.state}\n            onChange={data => {\n              this.setState({ value: data });\n              console.log('onChange', data);\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n### API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| value | Date \\| Date[] | - | 值 |\n| defaultValue | Date \\| Date[] | - | 初始值 |\n| min | Date | new Date() | 最小可选日期 |\n| max | Date | new Date() + 1 年 | 最大可选日期 |\n| multiple | boolean | false | 是否双选 |\n| dateRender | (value?: Date) => void | date => date.getDate() | 日期渲染函数 |\n| disabledDate | (value?: Date) => boolean | () => false | 日期是否禁止选择 |\n| onChange | (value?: Date[]) => void | - | 日期选择发生变化时触发的回调函数 |\n"}}]);