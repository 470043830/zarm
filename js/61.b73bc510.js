(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{393:function(n,e,t){"use strict";t.r(e);var r=t(3),s=t.n(r),a=t(4),l=t.n(a),o=t(2),i=t.n(o),c=t(5),p=t.n(c),u=t(403),h=(t(704),function(n){function e(){var n,r,a,o;l()(this,e);for(var c=arguments.length,p=Array(c),u=0;u<c;u++)p[u]=arguments[u];return r=a=i()(this,(n=e.__proto__||s()(e)).call.apply(n,[this].concat(p))),a.document=function(){return{document:t(439),className:"progress-page"}},o=r,i()(a,o)}return p()(e,n),e}(u.a));e.default=h},403:function(n,e,t){"use strict";var r=t(239),s=t.n(r),a=t(240),l=t.n(a),o=t(404),i=t.n(o),c=t(3),p=t.n(c),u=t(4),h=t.n(u),m=t(6),d=t.n(m),g=t(2),v=t.n(g),f=t(5),y=t.n(f),w=t(0),N=t.n(w),b=t(42),S=t.n(b),C=t(405),k=t.n(C),P=t(406),_=t.n(P),x=(t(407),function(n){function e(n){h()(this,e);var t=v()(this,(e.__proto__||p()(e)).call(this,n));return t.nodeList=[],t.components=new i.a,t}return y()(e,n),d()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){S.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var r,a=s()(this.components);!(n=(r=a.next()).done);n=!0){var o=r.value,i=l()(o,2),c=i[0],p=i[1],u=document.getElementById(c);this.nodeList.push(u),u instanceof HTMLElement&&S.a.render(p,u)}}catch(n){e=!0,t=n}finally{try{!n&&a.return&&a.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var r=new k.a.Renderer;r.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var s=k()(e,{renderer:r,highlight:function(n){return _.a.highlightAuto(n).value}});return N.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:s}})}return N.a.createElement("span",null)}}]),e}(N.a.Component));e.a=x},439:function(n,e){n.exports="## 进度条 Progress\n\n\n\n### 基本用法\n```jsx\nimport { Progress, Cell, Select, Stepper } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percent: 10,\n      theme: 'primary',\n      shape: 'round',\n      weight: 'normal'\n    };\n  }\n\n  render() {\n    const { percent, theme, shape, weight } = this.state;\n\n    return (\n      <div>\n        <div className=\"progress\">\n          <Progress\n            percent={percent}\n            theme={theme}\n            shape={shape}\n            weight={weight}\n          >\n            {percent}%\n          </Progress>\n        </div>\n        <div className=\"progress\">\n          <Progress\n            type=\"circle\"\n            percent={percent}\n            theme={theme}\n            shape={shape}\n            weight={weight}\n          >\n            <div className=\"progress-content\">\n              <span className=\"progress-text\">{percent}</span>\n              <span className=\"progress-percent\">%</span>\n            </div>\n          </Progress>\n        </div>\n        <div className=\"progress\">\n          <Progress\n            type=\"semi-circle\"\n            percent={percent}\n            theme={theme}\n            shape={shape}\n            weight={weight}\n          >\n            <div className=\"progress-content\">\n              <span className=\"progress-text\">{percent}</span>\n              <span className=\"progress-percent\">%</span>\n            </div>\n          </Progress>\n        </div>\n\n        <Cell title=\"进度\">\n          <Stepper\n            shape=\"radius\"\n            step={10}\n            min={0}\n            max={100}\n            value={percent}\n            onChange={(value) => {\n              if (Number.isNaN(Number(value))) return;\n              this.setState({\n                percent: value,\n              });\n            }}\n          />\n        </Cell>\n\n        <Cell title=\"主题\">\n          <Select\n            value={theme}\n            dataSource={[\n              { value: 'primary', label: 'primary' },\n              { value: 'success', label: 'success' },\n              { value: 'warning', label: 'warning' },\n              { value: 'error', label: 'error' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                theme: selected[0].value,\n              });\n            }}\n          />\n        </Cell>\n\n        <Cell title=\"线条形状\">\n          <Select\n            value={shape}\n            dataSource={[\n              { value: 'round', label: 'round' },\n              { value: 'rect', label: 'rect' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                shape: selected[0].value,\n              });\n            }}\n          />\n        </Cell>\n\n        <Cell title=\"线条粗细\">\n          <Select\n            value={weight}\n            dataSource={[\n              { value: 'normal', label: 'normal' },\n              { value: 'thin', label: 'thin' },\n            ]}\n            onOk={(selected) => {\n              this.setState({\n                weight: selected[0].value,\n              });\n            }}\n          />\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-progress | | 类名前缀 |\n| className | string | | | 追加类名 |\n| theme | string | `primary` | `default`, `primary`, `info`, `success`, `warning`, `error` | 主题 |\n| percent | number | 0 | | 进度百分比（范围：0～100） |\n| type | string | `line` | `line`, `circle`, `semi-circle` | 类型 |\n| shape | string | `round` | `round`, `rect` | 线条形状 |\n| weight | string | `normal` | `normal`, `thin` | 线条粗细 |\n| style | React.CSSProperties |  |  | 自定义样式 \n"},704:function(n,e,t){}}]);