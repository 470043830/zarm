(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{395:function(n,e,o){"use strict";o.r(e);var a=o(3),i=o.n(a),t=o(4),r=o.n(t),d=o(2),l=o.n(d),u=o(5),s=o.n(u),c=o(403),R=(o(708),function(n){function e(){var n,a,t,d;r()(this,e);for(var u=arguments.length,s=Array(u),c=0;c<u;c++)s[c]=arguments[c];return a=t=l()(this,(n=e.__proto__||i()(e)).call.apply(n,[this].concat(s))),t.document=function(){return{document:o(441),className:"radio-page"}},d=a,l()(t,d)}return s()(e,n),e}(c.a));e.default=R},403:function(n,e,o){"use strict";var a=o(239),i=o.n(a),t=o(240),r=o.n(t),d=o(404),l=o.n(d),u=o(3),s=o.n(u),c=o(4),R=o.n(c),p=o(6),m=o.n(p),v=o(2),f=o.n(v),h=o(5),b=o.n(h),C=o(0),g=o.n(C),y=o(42),D=o.n(y),G=o(405),k=o.n(G),x=o(406),N=o.n(x),w=(o(407),function(n){function e(n){R()(this,e);var o=f()(this,(e.__proto__||s()(e)).call(this,n));return o.nodeList=[],o.components=new l.a,o}return b()(e,n),m()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){D.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,o=void 0;try{for(var a,t=i()(this.components);!(n=(a=t.next()).done);n=!0){var d=a.value,l=r()(d,2),u=l[0],s=l[1],c=document.getElementById(u);this.nodeList.push(c),c instanceof HTMLElement&&D.a.render(s,c)}}catch(n){e=!0,o=n}finally{try{!n&&t.return&&t.return()}finally{if(e)throw o}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,o=n.className;if("string"==typeof e){this.components.clear();var a=new k.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var i=k()(e,{renderer:a,highlight:function(n){return N.a.highlightAuto(n).value}});return g.a.createElement("div",{className:o,dangerouslySetInnerHTML:{__html:i}})}return g.a.createElement("span",null)}}]),e}(g.a.Component));e.a=w},441:function(n,e){n.exports='## 单选框 Radio\n\n\n\n### 基本用法\n```jsx\nimport { Radio, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell><Radio>普通</Radio></Cell>\n        <Cell><Radio defaultChecked>默认选中</Radio></Cell>\n        <Cell><Radio disabled>禁用</Radio></Cell>\n        <Cell><Radio defaultChecked disabled>选中且禁用</Radio></Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 按钮样式\n```jsx\nimport { Radio, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      radio: \'0\',\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Radio.Group\n              type="button"\n              value={this.state.radio}\n              onChange={value => console.log(`radio to ${value}`)}\n            >\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" defaultValue="1">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          指定默认值\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2" disabled>选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          禁用指定项\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" shape="radius">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          圆角\n        </Cell>\n\n        <Cell\n          description={\n            <Radio.Group type="button" shape="round">\n              <Radio value="0">选项一</Radio>\n              <Radio value="1">选项二</Radio>\n              <Radio value="2">选项三</Radio>\n            </Radio.Group>\n          }\n        >\n          椭圆角\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 块级样式\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div className="block-box">\n        <Radio.Group block compact type="button" shape="radius">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2">选项三</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 列表样式\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radio.Group type="cell">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2" disabled>选项三（禁止选择）</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 列表样式禁用状态\n```jsx\nimport { Radio } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Radio.Group disabled type="cell">\n          <Radio value="0">选项一</Radio>\n          <Radio value="1">选项二</Radio>\n          <Radio value="2">选项三</Radio>\n        </Radio.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n#### Radio\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-radio | | 类名前缀 |\n| className | string | | | 追加类名 |\n| theme | string | `primary` | `default`, `primary`, `info`, `success`, `warning`, `error` | 主题 |\n| shape | string | | `radius`, `round` | 圆角或者椭圆角 | \n| type | string | | `button`, `cell` | 显示类型 |\n| value | string &#124; number | | | 值 |\n| checked | boolean | | | 当前是否选中 |\n| defaultChecked | boolean | | | 初始是否选中 |\n| disabled | boolean | false | | 是否禁用 |\n| onChange | (checked: boolean) => void | | \\(checked: boolean\\) | 值变化时触发的回调函数 |\n\n#### Radio.Group\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-radio | | 类名前缀 |\n| className | string | | | 追加类名 |\n| theme | string | `primary` | `default`, `primary`, `info`, `success`, `warning`, `error` | 主题 |\n| type | string | | `button`, `cell` | 显示类型 |\n| shape | string | | `radius`, `round` | 形状 |\n| value | string &#124; number | | | 选中值 |\n| defaultValue | string &#124; number | | | 初始选中值 |\n| block | boolean | false | | 是否为块级元素 |\n| disabled | boolean | false | | 是否禁用 |\n| compact | boolean | false | | 是否启用紧凑模式 |\n| onChange | <code>(value: number &#124; string) => void</code> | noop | \\(value: string &#124; number\\) | 值变化时触发的回调函数 |\n'},708:function(n,e,o){}}]);