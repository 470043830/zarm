(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{371:function(e,n,o){"use strict";o.r(n);var t=o(4),r=o.n(t),c=o(5),a=o.n(c),l=o(2),u=o.n(l),i=o(6),s=o.n(i),h=o(411),d=(o(511),function(e){function n(){var e,t,c,l;a()(this,n);for(var i=arguments.length,s=Array(i),h=0;h<i;h++)s[h]=arguments[h];return t=c=u()(this,(e=n.__proto__||r()(n)).call.apply(e,[this].concat(s))),c.document=function(){return{document:o(424),className:"checkbox-page"}},l=t,u()(c,l)}return s()(n,e),n}(h.a));n.default=d},401:function(e,n,o){"use strict";o(241),o(329)},411:function(e,n,o){"use strict";var t=o(406),r=o.n(t),c=o(407),a=o.n(c),l=o(408),u=o.n(l),i=o(4),s=o.n(i),h=o(5),d=o.n(h),m=o(7),b=o.n(m),C=o(2),p=o.n(C),k=o(6),x=o.n(k),v=o(0),f=o.n(v),g=o(55),y=o.n(g),D=o(409),N=o.n(D),_=o(410),G=o(1),M=o.n(G),E=o(413),O=o.n(E),R=(o(414),o(415),o(416),o(333),function(e){function n(){return d()(this,n),p()(this,(n.__proto__||s()(n)).apply(this,arguments))}return x()(n,e),b()(n,[{key:"componentDidMount",value:function(){var e=this,n=this.props,o=n.onChange,t=n.value;this.cm=O()(this.editor,{mode:"jsx",theme:"react",keyMap:"sublime",viewportMargin:1/0,lineNumbers:!1,dragDrop:!1}),this.cm.setValue(t),this.cm.on("changes",function(n){o&&(clearTimeout(e.timeout),e.timeout=setTimeout(function(){o(n.getValue())},300))})}},{key:"render",value:function(){var e=this;return f.a.createElement("div",{className:"editor",ref:function(n){e.editor=n}})}}]),n}(v.Component)),w=R;R.propTypes={onChange:M.a.func,value:M.a.string},R.defaultProps={onChange:function(){},value:""};o(401);var z=function(e){function n(e){d()(this,n);var o=p()(this,(n.__proto__||s()(n)).call(this,e));return o.toggleShowCode=function(){o.setState({isOpen:!o.state.isOpen})},o.containerId=""+parseInt(1e9*Math.random(),10).toString(36),o.document=o.props.children.match(/([^]*)\n?(```[^]+```)/),o.title=String(o.document[1]),o.source=o.document[2].match(/```(.*)\n?([^]+)```/),o.state={isOpen:!1},o}return x()(n,e),b()(n,[{key:"componentDidMount",value:function(){this.renderSource(this.source[2])}},{key:"componentWillUnmount",value:function(){this.containerElem&&y.a.unmountComponentAtNode(this.containerElem)}},{key:"renderSource",value:function(e){var n=this;Promise.all([o.e(5),o.e(6),o.e(71)]).then(o.bind(null,544)).then(function(e){return{args:["context","React","ReactDOM","zarm"],argv:[n,f.a,y.a,e]}}).then(function(o){var t=o.args;o.argv;e=e.replace(/import\s+\{\s+(.*)\s+\}\s+from\s+'zarm';/,"const { $1 } = zarm;").replace("mountNode","document.getElementById('"+n.containerId+"')");var r=Object(_.transform)(e,{presets:["es2015","react"]}).code;t.push(r),n.source[2]=e}).catch(function(e){0})}},{key:"render",value:function(){var e=this;return f.a.createElement("div",null,f.a.createElement("h3",null,this.title),f.a.createElement("div",{className:"demo"},f.a.createElement("div",{className:"demo-code"},f.a.createElement("div",{className:"demo-code-editor",ref:function(n){e.code=n},dangerouslySetInnerHTML:{__html:this.description}}),f.a.createElement(w,{value:this.source[2],onChange:function(n){return e.renderSource(n)}}))))}}]),n}(v.Component),S=function(e){function n(e){d()(this,n);var o=p()(this,(n.__proto__||s()(n)).call(this,e));return o.nodeList=[],o.components=new u.a,o.renderer=new N.a.Renderer,o}return x()(n,e),b()(n,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(e){y.a.unmountComponentAtNode(e)})}},{key:"renderDOM",value:function(){var e=!0,n=!1,o=void 0;try{for(var t,c=r()(this.components);!(e=(t=c.next()).done);e=!0){var l=t.value,u=a()(l,2),i=u[0],s=u[1],h=document.getElementById(i);this.nodeList.push(h),h instanceof HTMLElement&&y.a.render(s,h)}}catch(e){n=!0,o=e}finally{try{!e&&c.return&&c.return()}finally{if(n)throw o}}}},{key:"render",value:function(){var e=this,n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),o=n.document,t=n.className;if("string"==typeof o){this.components.clear();var r=N()(o.replace(/:::\s?api\s?([^]+?):::/g,function(e,n){return n}).replace(/:::\s?demo\s?([^]+?):::/g,function(n,o,t){var r=t.toString(36);return e.components.set(r,f.a.createElement(z,e.props,o)),"<div id="+r+"></div>"}),{renderer:this.renderer});return f.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:r}})}return f.a.createElement("span",null)}}]),n}(f.a.Component);n.a=S},424:function(e,n){e.exports='## 复选框 Checkbox\n\n:::demo 基本用法\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell><Checkbox>普通</Checkbox></Cell>\n        <Cell><Checkbox defaultChecked>默认选中</Checkbox></Cell>\n        <Cell><Checkbox disabled>禁用</Checkbox></Cell>\n        <Cell><Checkbox defaultChecked disabled>选中且禁用</Checkbox></Cell>\n        <Cell className="agreement-box">\n          <Checkbox id="agreement" />\n          <label htmlFor="agreement">阅读并同意<a href="/#" onClick={(e) => { e.preventDefault(); alert(\'agree it\'); }}>《XXX条款》</a>中的相关规定</label>\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 按钮样式\n```jsx\nimport { Cell, Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Checkbox.Group type="button">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          普通\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" defaultValue={[\'0\', \'1\']}>\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          指定默认值\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2" disabled>选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          禁用指定项\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" shape="radius">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          圆角\n        </Cell>\n\n        <Cell\n          description={\n            <Checkbox.Group type="button" shape="round">\n              <Checkbox value="0">选项一</Checkbox>\n              <Checkbox value="1">选项二</Checkbox>\n              <Checkbox value="2">选项三</Checkbox>\n            </Checkbox.Group>\n          }\n        >\n          椭圆角\n        </Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 块级样式\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div className="block-box">\n        <Checkbox.Group block type="button">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2">选项三</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 列表样式\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Checkbox.Group type="cell">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2" disabled>选项三（禁止选择）</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::demo 列表样式禁用状态\n```jsx\nimport { Checkbox } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Checkbox.Group disabled type="cell">\n          <Checkbox value="0">选项一</Checkbox>\n          <Checkbox value="1">选项二</Checkbox>\n          <Checkbox value="2">选项三</Checkbox>\n        </Checkbox.Group>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n:::\n\n\n:::api API\n\n#### Checkbox\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-checkbox | | 类名前缀 |\n| className | string | | | 追加类名 |\n| checked | boolean | | | 是否选中 |\n| shape | string | | `radius`, `round` | 形状 |\n| block | boolean | false | | 是否为块级元素 |\n| type | string | | `button`, `cell` | 显示类型 |\n| defaultChecked | boolean | | | 初始是否选中 |\n| value | string &#124; number | | | 值 |\n| disabled | boolean | false | | 是否禁用 |\n| onChange | <code>(checked: boolean) => void</code> | | <code>\\(checked: boolean\\)</code> | 值变化时触发的回调函数 |\n| id | string | | | 方便外部带有for属性的label标签控制当前checkbox |\n\n#### Checkbox.Group\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-checkbox | | 类名前缀 |\n| className | string | | | 追加类名 |\n| block | boolean | false | | 是否为块级元素 |\n| shape | string | | `radius`, `round` | 形状 |\n| value | Array&lt;number &#124; string&gt; | [ ] | | 选中值 |\n| type | string | | `button`, `cell` | 显示类型 |\n| defaultValue | Array&lt;number &#124; string&gt; | [ ] | | 初始选中值 |\n| disabled | boolean | false | | 是否禁用 |\n| onChange | <code>(value: Array&lt;number &#124; string&gt;) => void</code> | noop | \\(value: Array&lt;number &#124; string&gt;\\) | 值变化时触发的回调函数 |\n| compact | boolean | false | | group内的checkbox（type="button"）是否无缝相连 |\n\n:::'},511:function(e,n,o){}}]);