(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{661:function(t,n,o){"use strict";o.r(n),o.d(n,"default",function(){return m});var e=o(17),i=o.n(e),l=o(18),r=o.n(l),c=o(19),s=o.n(c),a=o(44),u=o.n(a),p=o(20),d=o.n(p),f=o(14),h=o.n(f),m=function(t){function n(){var t,e;i()(this,n);for(var l=arguments.length,c=new Array(l),a=0;a<l;a++)c[a]=arguments[a];return e=r()(this,(t=s()(n)).call.apply(t,[this].concat(c))),h()(u()(e),"document",function(){return{document:o(936),className:"tooltip-page"}}),e}return d()(n,t),n}(o(885).a)},885:function(t,n,o){"use strict";o.d(n,"a",function(){return b});var e=o(17),i=o.n(e),l=o(21),r=o.n(l),c=o(18),s=o.n(c),a=o(19),u=o.n(a),p=o(20),d=o.n(p),f=o(1),h=o.n(f),m=o(888),T=o.n(m),g=o(889),B=o.n(g),b=(o(890),o(886),function(t){function n(){return i()(this,n),s()(this,u()(n).apply(this,arguments))}return d()(n,t),r()(n,[{key:"render",value:function(){var t=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),n=t.document,o=t.className;if("string"==typeof n){var e=new T.a.Renderer;e.table=function(t,n){return'<div class="grid-container"><table class="grid"><thead>'.concat(t,"</thead><tbody>").concat(n,"</tbody></table></div>")},e.code=function(t,n){var o=!(!n||!B.a.getLanguage(n))?B.a.highlight(n,t).value:t;return'<pre><code class="hljs '.concat(n,'">').concat(o,"</code></pre>")};var i=T()(n,{renderer:e});return h.a.createElement("div",{className:o,dangerouslySetInnerHTML:{__html:i}})}return h.a.createElement("span",null)}}]),n}(f.Component))},886:function(t,n,o){},936:function(t,n){t.exports='# Tooltip 工具提示\n\n## 基本用法\n```jsx\nimport { Tooltip, Cell, Button } from \'zarm\';\n\nclass Demo extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Cell>\n          <div>\n            <div style={{ marginLeft: 60 }}>\n              <Tooltip direction="topLeft" title="topLeft text">\n                <Button block size="xs">TL</Button>\n              </Tooltip>\n\n              <Tooltip direction="top" title="top text">\n                <Button block size="xs">Top</Button>\n              </Tooltip>\n\n              <Tooltip direction="topRight" title="topRight text">\n                <Button block size="xs">TR</Button>\n              </Tooltip>\n            </div>\n\n            <div style={{ width: 60, float: "left" }}>\n              <Tooltip direction="leftTop" title="leftTop text">\n                <Button block size="xs">LT</Button>\n              </Tooltip>\n\n              <Tooltip direction="left" title="left text">\n                <Button block size="xs">Left</Button>\n              </Tooltip>\n\n              <Tooltip direction="leftBottom" title="leftBottom text">\n                <Button block size="xs">LB</Button>\n              </Tooltip>\n            </div>\n\n            <div style={{ width: 60, marginLeft: 60 * 4 }}>\n              <Tooltip direction="rightTop" title="rightTop text">\n                <Button block size="xs">RT</Button>\n              </Tooltip>\n\n              <Tooltip direction="right" title="right text">\n                <Button block size="xs">Right</Button>\n              </Tooltip>\n\n              <Tooltip direction="rightBottom" title="rightBottom text">\n                <Button block size="xs">RB</Button>\n              </Tooltip>\n            </div>\n\n            <div style={{ marginLeft: 60, clear: \'both\' }}>\n              <Tooltip direction="bottomLeft" title="bottomLeft text">\n                <Button block size="xs">BL</Button>\n              </Tooltip>\n\n              <Tooltip direction="bottom" title="bottom text">\n                <Button block size="xs">Bottom</Button>\n              </Tooltip>\n\n              <Tooltip direction="bottomRight" title="bottomRight">\n                <Button block size="xs">BR</Button>\n              </Tooltip>\n            </div>\n\n          </div>\n        </Cell>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n### API\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| visible | boolean | false | 是否显示 |\n| title | ReactNode | - | 显示内容 |\n| direction | string | \'top\' | 显示方向，可选值 `topLeft`、`top`、`topRight`、`rightTop`、`right`、`rightBottom`、`bottomLeft`、`bottom`、`bottomRight`、`leftTop`、`left`、`leftBottom` |\n| trigger | string | \'click\' | 触发方式，PC端默认值为\'hover\' |\n| onVisibleChange | (visible?: boolean) => void | noop | 显示/隐藏触发的事件 |\n'}}]);