(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{647:function(n,e,t){"use strict";t.r(e),t.d(e,"default",function(){return h});var r=t(17),a=t.n(r),o=t(18),c=t.n(o),i=t(19),s=t.n(i),l=t(44),u=t.n(l),d=t(20),m=t.n(d),f=t(14),N=t.n(f),h=function(n){function e(){var n,r;a()(this,e);for(var o=arguments.length,i=new Array(o),l=0;l<o;l++)i[l]=arguments[l];return r=c()(this,(n=s()(e)).call.apply(n,[this].concat(i))),N()(u()(r),"document",function(){return{document:t(922),className:"notice-bar-page"}}),r}return m()(e,n),e}(t(885).a)},885:function(n,e,t){"use strict";t.d(e,"a",function(){return b});var r=t(17),a=t.n(r),o=t(21),c=t.n(o),i=t(18),s=t.n(i),l=t(19),u=t.n(l),d=t(20),m=t.n(d),f=t(1),N=t.n(f),h=t(888),p=t.n(h),g=t(889),v=t.n(g),b=(t(890),t(886),function(n){function e(){return a()(this,e),s()(this,u()(e).apply(this,arguments))}return m()(e,n),c()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){var r=new p.a.Renderer;r.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'.concat(n,"</thead><tbody>").concat(e,"</tbody></table></div>")},r.code=function(n,e){var t=!(!e||!v.a.getLanguage(e))?v.a.highlight(e,n).value:n;return'<pre><code class="hljs '.concat(e,'">').concat(t,"</code></pre>")};var a=p()(e,{renderer:r});return N.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:a}})}return N.a.createElement("span",null)}}]),e}(f.Component))},886:function(n,e,t){},922:function(n,e){n.exports="# NoticeBar 通告栏\n\n\n\n## 基本用法\n```jsx\nimport { NoticeBar, Icon } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoticeBar>普通</NoticeBar>\n        <NoticeBar theme=\"danger\">自定义主题</NoticeBar>\n        <NoticeBar icon={<Icon type=\"wrong-round\" />}>自定义图标</NoticeBar>\n        <NoticeBar scrollable>各位zarmer请注意，本组件使用了自动滚动功能，更多用法请参见使用文档。</NoticeBar>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## 特定场景\n```jsx\nimport { NoticeBar  } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoticeBar hasArrow onClick={() => alert('click this notice!')}>链接样式的</NoticeBar>\n        <NoticeBar closable>可关闭的</NoticeBar>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| 属性 | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| theme | string | 'warning' | 主题，可选值 `default`、`primary`、`success`、`warning`、`danger` |\n| icon | ReactNode | - | 设置图标 |\n| scrollable | boolean | false | 是否开启自动滚动轮播 |\n| closable | boolean | false | 是否显示关闭按钮 |\n| hasArrow | boolean | false | 是否显示箭头 |\n| onClick | () => void | - | 点击后触发的回调函数 |\n"}}]);