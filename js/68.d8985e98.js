(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{391:function(n,e,t){"use strict";t.r(e);var o=t(4),a=t.n(o),r=t(5),i=t.n(r),l=t(2),c=t.n(l),s=t(6),u=t.n(s),d=function(n){function e(){var n,o,r,l;i()(this,e);for(var s=arguments.length,u=Array(s),d=0;d<s;d++)u[d]=arguments[d];return o=r=c()(this,(n=e.__proto__||a()(e)).call.apply(n,[this].concat(u))),r.document=function(){return{document:t(439),className:"switch-page"}},l=o,c()(r,l)}return u()(e,n),e}(t(394).a);e.default=d},394:function(n,e,t){"use strict";var o=t(395),a=t.n(o),r=t(396),i=t.n(r),l=t(397),c=t.n(l),s=t(4),u=t.n(s),d=t(5),h=t.n(d),p=t(7),v=t.n(p),f=t(2),m=t.n(f),C=t(6),g=t.n(C),w=t(0),y=t.n(w),b=t(55),k=t.n(b),S=t(398),_=t.n(S),D=t(399),N=t.n(D),M=(t(400),function(n){function e(n){h()(this,e);var t=m()(this,(e.__proto__||u()(e)).call(this,n));return t.nodeList=[],t.components=new c.a,t}return g()(e,n),v()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){k.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var o,r=a()(this.components);!(n=(o=r.next()).done);n=!0){var l=o.value,c=i()(l,2),s=c[0],u=c[1],d=document.getElementById(s);this.nodeList.push(d),d instanceof HTMLElement&&k.a.render(u,d)}}catch(n){e=!0,t=n}finally{try{!n&&r.return&&r.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var o=new _.a.Renderer;o.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var a=_()(e,{renderer:o,highlight:function(n){return N.a.highlightAuto(n).value}});return y.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:a}})}return y.a.createElement("span",null)}}]),e}(y.a.Component));e.a=M},439:function(n,e){n.exports="## 开关 Switch\n\n\n\n### 基本用法\n```jsx\nimport { Switch, Cell } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: true,\n    };\n  }\n\n  toggle(value) {\n    this.setState({\n      value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Switch\n              checked={this.state.value}\n              onChange={(value) => {\n                this.setState({ value });\n              }}\n            />\n          }\n        >\n          普通\n        </Cell>\n        <Cell description={<Switch defaultChecked />}>默认开</Cell>\n        <Cell description={<Switch disabled />}>禁用的开关（默认关）</Cell>\n        <Cell description={<Switch defaultChecked disabled />}>禁用的开关（默认开）</Cell>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-switch | | 类名前缀 |\n| className | string | | | 追加类名 |\n| checked | boolean | | | 值 |\n| defaultChecked | boolean | | | 初始值 |\n| disabled | boolean | false | | 是否禁用 |\n| onChange | <code>(value: boolean) => void</code> | | \\(value: boolean\\) | 值变化时触发的回调函数 |\n| style | React.CSSProperties | | | 自定义样式 |\n"}}]);