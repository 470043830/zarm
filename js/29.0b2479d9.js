(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{353:function(n,o,t){"use strict";t.r(o);var e=t(4),s=t.n(e),p=t(5),i=t.n(p),l=t(2),a=t.n(l),c=t(6),r=t.n(c),u=t(401),d=(t(483),function(n){function o(){var n,e,p,l;i()(this,o);for(var c=arguments.length,r=Array(c),u=0;u<c;u++)r[u]=arguments[u];return e=p=a()(this,(n=o.__proto__||s()(o)).call.apply(n,[this].concat(r))),p.document=function(){return{document:t(431),className:"popup-page"}},l=e,a()(p,l)}return r()(o,n),o}(u.a));o.default=d},431:function(n,o){n.exports="## 弹出框 Popup\n\n\n\n### 基本用法\n```jsx\nimport { Popup, Cell, Button } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      popBottom: false,\n      popTop: false,\n      popLeft: false,\n      popRight: false,\n    };\n  }\n\n  open(key) {\n    this.setState({\n      [`${key}`]: true,\n    });\n  }\n\n  close(key) {\n    this.setState({\n      [`${key}`]: false,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popTop')}>开启</Button>\n          }\n        >\n          从上方弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popBottom')}>开启</Button>\n          }\n        >\n          从下方弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popLeft')}>开启</Button>\n          }\n        >\n          从左侧弹出\n        </Cell>\n\n        <Cell\n          description={\n            <Button size=\"xs\" onClick={() => this.open('popRight')}>开启</Button>\n          }\n        >\n          从右侧弹出\n        </Cell>\n\n        <Popup\n          autoClose\n          visible={this.state.popTop}\n          direction=\"top\"\n          duration={3000}\n          mask={false}\n          onMaskClick={() => this.close('popTop')}\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box-top\">\n            更新成功\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popBottom}\n          direction=\"bottom\"\n          onMaskClick={() => this.close('popBottom')}\n          onOpen={() => console.log('打开')}\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box\">\n            <Button size=\"xs\" onClick={() => { this.close('popBottom'); }}>关闭弹层</Button>\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popLeft}\n          onMaskClick={() => this.close('popLeft')}\n          direction=\"left\"\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box-left\">\n            <Button size=\"xs\" onClick={() => this.close('popLeft')}>关闭弹层</Button>\n          </div>\n        </Popup>\n\n        <Popup\n          visible={this.state.popRight}\n          onMaskClick={() => this.close('popRight')}\n          direction=\"right\"\n          onClose={() => console.log('关闭')}\n        >\n          <div className=\"popup-box\">\n            <Button size=\"xs\" onClick={() => this.close('popRight')}>关闭弹层</Button>\n          </div>\n        </Popup>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-popup | | 类名前缀 |\n| className | string | | | 追加类名 |\n| visible | boolean | false | | 是否显示 |\n| autoClose | boolean | false | | 是否自动关闭 |\n| direction | string | `bottom` | `top`, `bottom`, `left`, `right` | 弹出方向 |\n| stayTime | number | 3000 | | 自动关闭前停留的时间（单位：毫秒） |\n| animationDuration | number | 200 | | 动画执行时间（单位：毫秒） |\n| maskType | string | `normal` | `transparent`, `light`, `normal`, `dark` | 遮罩层的类型 |\n| onMaskClick | <code>() => void</code> | noop | | 点击遮罩层时触发的回调函数 |\n| onClose | <code>() => void</code> | noop | | 关闭后触发的回调函数 |\n"},483:function(n,o,t){}}]);