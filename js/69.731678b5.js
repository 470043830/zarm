(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{393:function(n,e,t){"use strict";t.r(e);var a=t(3),o=t.n(a),i=t(4),s=t.n(i),r=t(2),l=t.n(r),d=t(5),c=t.n(d),m=t(395),u=(t(709),function(n){function e(){var n,a,i,r;s()(this,e);for(var d=arguments.length,c=Array(d),m=0;m<d;m++)c[m]=arguments[m];return a=i=l()(this,(n=e.__proto__||o()(e)).call.apply(n,[this].concat(c))),i.document=function(){return{document:t(441),className:"tabs-page"}},r=a,l()(i,r)}return c()(e,n),e}(m.a));e.default=u},395:function(n,e,t){"use strict";var a=t(396),o=t.n(a),i=t(397),s=t.n(i),r=t(398),l=t.n(r),d=t(3),c=t.n(d),m=t(4),u=t.n(m),v=t(6),b=t.n(v),f=t(2),p=t.n(f),h=t(5),P=t.n(h),N=t(0),g=t.n(N),T=t(42),D=t.n(T),y=t(399),x=t.n(y),C=t(400),w=t.n(C),M=(t(401),function(n){function e(n){u()(this,e);var t=p()(this,(e.__proto__||c()(e)).call(this,n));return t.nodeList=[],t.components=new l.a,t}return P()(e,n),b()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){D.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var a,i=o()(this.components);!(n=(a=i.next()).done);n=!0){var r=a.value,l=s()(r,2),d=l[0],c=l[1],m=document.getElementById(d);this.nodeList.push(m),m instanceof HTMLElement&&D.a.render(c,m)}}catch(n){e=!0,t=n}finally{try{!n&&i.return&&i.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var a=new x.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var o=x()(e,{renderer:a,highlight:function(n){return w.a.highlightAuto(n).value}});return g.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:o}})}return g.a.createElement("span",null)}}]),e}(g.a.Component));e.a=M},441:function(n,e){n.exports='## 标签页 Tabs\n\n\n\n### 基本用法\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs onChange={(i) => { console.log(i); }}>\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2">\n            <div className="content">选项卡2内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 可滑动\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs canSwipe onChange={(i) => { console.log(i); }}>\n          <Panel title="选项卡1">\n            <div className="content">试试点我左滑</div>\n          </Panel>\n          <Panel title="选项卡2">\n            <div className="content">试试点我右滑</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 指定默认选项\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs defaultValue={1}>\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2">\n            <div className="content">选项卡2内容</div>\n          </Panel>\n          <Panel title="选项卡3">\n            <div className="content">选项卡3内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 指定线条宽度\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs lineWidth={60}>\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2">\n            <div className="content">选项卡2内容</div>\n          </Panel>\n          <Panel title="选项卡3">\n            <div className="content">选项卡3内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 禁用指定选项\n```jsx\nimport { Tabs } from \'zarm\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Tabs>\n          <Panel title="选项卡1">\n            <div className="content">选项卡1内容</div>\n          </Panel>\n          <Panel title="选项卡2" disabled>\n            <div className="content">选项卡2内容</div>\n          </Panel>\n          <Panel title="选项卡3">\n            <div className="content">选项卡3内容</div>\n          </Panel>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n#### Tabs\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-tabs | | 类名前缀 |\n| className | string | | | 追加类名 |\n| value | string | | | 值 |\n| defaultValue | string | | | 初始值 |\n| disabled | boolean | false | | 是否禁用 |\n| canSwipe | boolean | false | | 是否支持滑动切换 |\n| lineWidth | number &#124; string | | | 线条宽度 |\n| onChange | <code>(index: number) => void</code> | noop | \\(index: number\\) | 值变化时触发的回调函数 |\n\n\n#### Panel\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| className | string | | | 追加类名 |\n| disabled | boolean | false | | 是否禁用 |\n| title | string | | | 标题 |\n| children | number | | | 内容 |\n'},709:function(n,e,t){}}]);