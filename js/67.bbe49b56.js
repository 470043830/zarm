(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{391:function(n,e,t){"use strict";t.r(e);var o=t(3),i=t.n(o),r=t(4),l=t.n(r),c=t(2),a=t.n(c),s=t(5),u=t.n(s),m=function(n){function e(){var n,o,r,c;l()(this,e);for(var s=arguments.length,u=Array(s),m=0;m<s;m++)u[m]=arguments[m];return o=r=a()(this,(n=e.__proto__||i()(e)).call.apply(n,[this].concat(u))),r.document=function(){return{document:t(439),className:"swipe-action-page"}},c=o,a()(r,c)}return u()(e,n),e}(t(395).a);e.default=m},395:function(n,e,t){"use strict";var o=t(396),i=t.n(o),r=t(397),l=t.n(r),c=t(398),a=t.n(c),s=t(3),u=t.n(s),m=t(4),d=t.n(m),p=t(6),h=t.n(p),g=t(2),f=t.n(g),v=t(5),C=t.n(v),y=t(0),w=t.n(y),b=t(42),k=t.n(b),A=t(399),B=t.n(A),S=t(400),z=t.n(S),D=(t(401),function(n){function e(n){d()(this,e);var t=f()(this,(e.__proto__||u()(e)).call(this,n));return t.nodeList=[],t.components=new a.a,t}return C()(e,n),h()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){k.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,t=void 0;try{for(var o,r=i()(this.components);!(n=(o=r.next()).done);n=!0){var c=o.value,a=l()(c,2),s=a[0],u=a[1],m=document.getElementById(s);this.nodeList.push(m),m instanceof HTMLElement&&k.a.render(u,m)}}catch(n){e=!0,t=n}finally{try{!n&&r.return&&r.return()}finally{if(e)throw t}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,t=n.className;if("string"==typeof e){this.components.clear();var o=new B.a.Renderer;o.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var i=B()(e,{renderer:o,highlight:function(n){return z.a.highlightAuto(n).value}});return w.a.createElement("div",{className:t,dangerouslySetInnerHTML:{__html:i}})}return w.a.createElement("span",null)}}]),e}(w.a.Component));e.a=D},439:function(n,e){n.exports='## 滑动操作 SwipeAction\n\n\n\n### 基本用法\n```jsx\nimport { SwipeAction, Button, Cell } from \'zarm\';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <SwipeAction\n          right={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'右按钮1\')}>右按钮1</Button>,\n            <Button size="lg" theme="error" onClick={() => console.log(\'右按钮2\')}>右按钮2</Button>,\n          ]}\n        >\n          <Cell>左滑看看</Cell>\n        </SwipeAction>\n\n        <SwipeAction\n          left={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'左按钮1\')}>左按钮1</Button>,\n            <Button size="lg" theme="error" onClick={() => console.log(\'左按钮2\')}>左按钮2</Button>,\n          ]}\n        >\n          <Cell>右滑看看</Cell>\n        </SwipeAction>\n\n        <SwipeAction\n          autoClose\n          left={[\n            <Button size="lg" theme="primary" onClick={() => console.log(\'左按钮1\')}>左按钮1</Button>,\n            <Button size="lg" theme="warning" onClick={() => console.log(\'左按钮2\')}>左按钮2</Button>,\n          ]}\n          right={[\n            <Button size="lg" theme="error" onClick={() => console.log(\'右按钮1\')}>右按钮2</Button>,\n          ]}\n          onOpen={() => console.log(\'open\')}\n          onClose={() => console.log(\'close\')}\n        >\n          <Cell>左右都能滑动（自动关闭）</Cell>\n        </SwipeAction>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-swipe-action | | 类名前缀 |\n| className | string | | | 追加类名 |\n| left | Array&lt;Object&gt; | [ ] | object: { theme, text, onClick } | 左侧按钮组 |\n| right | Array&lt;Object&gt; | [ ] | object: { theme, text, onClick } | 右侧按钮组 |\n| moveDistanceRatio | number | 0.5 | | 移动距离比例临界点 |\n| moveTimeSpan | number | 300 | | 移动时间跨度临界点 |\n| animationDuration | number | 300 | | 动画执行时间，单位：毫秒 |\n| offset | number | 10 | | 回弹偏移的距离 |\n| autoClose | boolean | | | 点击按钮后是否自动关闭 | \n| disabled | boolean | | | 是否允许滑动 |\n| onOpen | <code>() => void</code> | noop | | 滑开时触发的回调函数 |\n| onClose | <code>() => void</code> | noop | | 关闭时触发的回调函数 |\n'}}]);