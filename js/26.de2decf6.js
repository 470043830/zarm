(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{350:function(n,o,e){"use strict";e.r(o);var r=e(4),t=e.n(r),a=e(5),c=e.n(a),i=e(2),s=e.n(i),l=e(6),u=e.n(l),d=e(401),m=(e(477),function(n){function o(){var n,r,a,i;c()(this,o);for(var l=arguments.length,u=Array(l),d=0;d<l;d++)u[d]=arguments[d];return r=a=s()(this,(n=o.__proto__||t()(o)).call.apply(n,[this].concat(u))),a.document=function(){return{document:e(428),className:"notice-bar-page"}},i=r,s()(a,i)}return u()(o,n),o}(d.a));o.default=m},428:function(n,o){n.exports="## 通告栏 NoticeBar\n\n\n\n### 基本用法\n```jsx\nimport { NoticeBar, Icon } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoticeBar>普通</NoticeBar>\n        <NoticeBar theme=\"error\">错误色</NoticeBar>\n        <NoticeBar icon={<Icon type=\"wrong-round\" />}>自定义图标</NoticeBar>\n        <NoticeBar autoscroll>各位zarmer请注意，本组件使用了自动滚动功能，更多用法请参见使用文档。</NoticeBar>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 特定场景\n```jsx\nimport { NoticeBar  } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoticeBar hasArrow onClick={() => alert('click this notice!')}>链接样式的</NoticeBar>\n        <NoticeBar hasClosable>可关闭的</NoticeBar>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-notice-bar | | 类名前缀 |\n| className | string | | | 追加类名 |\n| theme | string | 'warning' | 'default', 'primary', 'info', 'success', 'warning', 'error' | 主题 |\n| icon | any | | | 设置图标 |\n| autoscroll | boolean | false | | 是否开启自动滚动轮播 |\n| hasClosable | boolean | false | | 是否显示关闭按钮 |\n| hasArrow | boolean | false | | 是否显示箭头 |\n| onClick | <code>() => void</code> | noop | | 点击后触发的回调函数 |\n"},477:function(n,o,e){}}]);