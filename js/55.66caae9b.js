(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{387:function(n,e,r){"use strict";r.r(e);var a=r(3),s=r.n(a),t=r(4),o=r.n(t),c=r(2),i=r.n(c),l=r(5),d=r.n(l),u=r(403),g=(r(703),function(n){function e(){var n,a,t,c;o()(this,e);for(var l=arguments.length,d=Array(l),u=0;u<l;u++)d[u]=arguments[u];return a=t=i()(this,(n=e.__proto__||s()(e)).call.apply(n,[this].concat(d))),t.document=function(){return{document:r(432),className:"message-page"}},c=a,i()(t,c)}return d()(e,n),e}(u.a));e.default=g},403:function(n,e,r){"use strict";var a=r(3),s=r.n(a),t=r(4),o=r.n(t),c=r(6),i=r.n(c),l=r(2),d=r.n(l),u=r(5),g=r.n(u),m=r(0),p=r.n(m),h=r(404),f=r.n(h),v=r(405),M=r.n(v),y=(r(406),function(n){function e(){return o()(this,e),d()(this,(e.__proto__||s()(e)).apply(this,arguments))}return g()(e,n),i()(e,[{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,r=n.className;if("string"==typeof e){var a=new f.a.Renderer;a.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"},a.code=function(n,e){return'<pre><code class="hljs '+e+'">'+(!(!e||!M.a.getLanguage(e))?M.a.highlight(e,n).value:n)+"</code></pre>"},f.a.setOptions({renderer:a});var s=f()(e,{renderer:a});return p.a.createElement("div",{className:r,dangerouslySetInnerHTML:{__html:s}})}return p.a.createElement("span",null)}}]),e}(p.a.Component));e.a=y},432:function(n,e){n.exports="## 消息 Message\n\n\n\n### 基本用法\n```jsx\nimport { Message, Icon } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Message>普通</Message>\n        <Message theme=\"error\">自定义主题</Message>\n        <Message icon={<Icon type=\"wrong-round\" />}>自定义图标</Message>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 可操作\n```jsx\nimport { Message } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <Message hasArrow onClick={() => alert('click this message!')}>链接样式的</Message>\n        <Message hasClosable>可关闭的</Message>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-message | | 类名前缀 |\n| className | string | | | 追加类名 |\n| theme | string | 'primary' | 'default', 'primary', 'info', 'success', 'warning', 'error' | 主题 |\n| icon | any | | | 设置图标 |\n| hasClosable | boolean | false | | 是否显示关闭按钮 |\n| hasArrow | boolean | false | | 是否显示箭头 |\n| onClick | <code>() => void</code> | noop | | 点击后触发的回调函数 |\n"},703:function(n,e,r){}}]);