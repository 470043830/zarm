(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{387:function(n,e,o){"use strict";o.r(e);var t=o(4),a=o.n(t),r=o(5),l=o.n(r),s=o(2),c=o.n(s),u=o(6),i=o.n(u),d=o(394),h=(o(706),function(n){function e(){var n,t,r,s;l()(this,e);for(var u=arguments.length,i=Array(u),d=0;d<u;d++)i[d]=arguments[d];return t=r=c()(this,(n=e.__proto__||a()(e)).call.apply(n,[this].concat(i))),r.document=function(){return{document:o(435),className:"search-bar-page"}},s=t,c()(r,s)}return i()(e,n),e}(d.a));e.default=h},394:function(n,e,o){"use strict";var t=o(395),a=o.n(t),r=o(396),l=o.n(r),s=o(397),c=o.n(s),u=o(4),i=o.n(u),d=o(5),h=o.n(d),m=o(7),p=o.n(m),v=o(2),f=o.n(v),g=o(6),C=o.n(g),b=o(0),y=o.n(b),D=o(55),S=o.n(D),w=o(398),x=o.n(w),B=o(399),N=o.n(B),M=(o(400),function(n){function e(n){h()(this,e);var o=f()(this,(e.__proto__||i()(e)).call(this,n));return o.nodeList=[],o.components=new c.a,o}return C()(e,n),p()(e,[{key:"componentDidMount",value:function(){this.renderDOM()}},{key:"componentDidUpdate",value:function(){this.renderDOM()}},{key:"componentWillUnmount",value:function(){this.nodeList.forEach(function(n){S.a.unmountComponentAtNode(n)})}},{key:"renderDOM",value:function(){var n=!0,e=!1,o=void 0;try{for(var t,r=a()(this.components);!(n=(t=r.next()).done);n=!0){var s=t.value,c=l()(s,2),u=c[0],i=c[1],d=document.getElementById(u);this.nodeList.push(d),d instanceof HTMLElement&&S.a.render(i,d)}}catch(n){e=!0,o=n}finally{try{!n&&r.return&&r.return()}finally{if(e)throw o}}}},{key:"render",value:function(){var n=this.document(localStorage.getItem("LANGUAGE")||"zh-CN"),e=n.document,o=n.className;if("string"==typeof e){this.components.clear();var t=new x.a.Renderer;t.table=function(n,e){return'<div class="grid-container"><table class="grid"><thead>'+n+"</thead><tbody>"+e+"</tbody></table></div>"};var a=x()(e,{renderer:t,highlight:function(n){return N.a.highlightAuto(n).value}});return y.a.createElement("div",{className:o,dangerouslySetInnerHTML:{__html:a}})}return y.a.createElement("span",null)}}]),e}(y.a.Component));e.a=M},435:function(n,e){n.exports="## 搜索框 SearchBar\n\n\n\n### 基本用法\n```jsx\nimport { SearchBar } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      value: '默认关键字',\n      placeholder: '搜索',\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        value: '默认关键字2',\n        placeholder: '搜索你想购买的保险',\n      });\n    }, 0);\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          shape=\"round\"\n          placeholder={this.state.placeholder}\n          showCancel={false}\n          onSubmit={(value) => {\n            console.log(`搜索内容为${value}`);\n          }}\n          onFocus={() => {\n            console.log('获取焦点');\n          }}\n          onChange={(value) => {\n            console.log(value);\n          }}\n          onBlur={() => {\n            console.log('失去焦点');\n          }}\n          onClear={() => {\n            console.log('点击了清除');\n          }}\n          onCancel={() => {\n            console.log('点击了取消');\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 始终展示取消按钮\n```jsx\nimport { SearchBar } from 'zarm';\n\nclass Demo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBar\n          showCancel\n          value={this.state.value}\n          placeholder=\"搜索\"\n          onChange={(value) => {\n            console.log(value);\n            this.setState({\n              value,\n            });\n          }}\n          onClear={(value) => {\n            console.log('清除了 -> ', value);\n            this.setState({\n              value: '',\n            });\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### 手动获取焦点\n```jsx\nimport { SearchBar, Button } from 'zarm';\n\nclass Demo extends React.Component {\n  render() {\n    return (\n      <div>\n        <SearchBar\n          shape=\"radius\"\n          cancelText=\"取消\"\n          placeholder=\"搜索\"\n          ref={(ref) => { this.manualFocus = ref; }}\n        />\n        <div className=\"button-wrap\">\n          <Button theme=\"primary\" size=\"xs\" shape=\"radius\" onClick={() => { this.manualFocus.focus(); }}>点击获取焦点</Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n### API\n\n| 属性 | 类型 | 默认值 | 可选值／参数 | 说明 |\n| :--- | :--- | :--- | :--- | :--- |\n| prefixCls | string | za-search-bar | | 类名前缀 |\n| className | string | | | 追加类名 |\n| placeholder | string | '搜索' | | 占位符 |\n| value | string | | | 值 |\n| defaultValue | string |  | | 初始值 |\n| shape | string | | `radius`, `round` | 圆角或者椭圆角 |\n| disabled | boolean | false | | 是否禁用 |\n| showCancel | boolean | false | | 是否一直展示取消按钮 |\n| cancelText | any | '取消' | | 取消按钮显示的内容 |\n| maxLength | number | | | 输入字数上限 |\n| clearable | boolean | true | | 是否提供清空输入框功能 |\n| onChange | <code>(value: string) => void</code> | noop | \\(value: string\\) | 值变化时触发的回调函数 |\n| onSubmit | <code>(value: string) => void</code> | noop | \\(value: string\\) | 提交时触发的回调函数 |\n| onFocus | <code>() => void</code> | noop | | 获取焦点时触发的回调函数 |\n| onBlur | <code>() => void</code> | noop | | 失去焦点时触发的回调函数 |\n| onClear | <code>() => void</code> | noop | | 点击清除按钮时触发的回调函数 |\n| onCancel | <code>() => void</code> | noop | | 点击取消时触发的回调函数 |\n"},706:function(n,e,o){}}]);