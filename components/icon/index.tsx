import React, { PureComponent } from 'react';
import classnames from 'classnames/dedupe';
import PropTypes from 'prop-types';
import { IconPropsType } from './PropsType';
import createFromIconfont from './IconFont';

const innerSvgProps = {
  width: '1em',
  height: '1em',
  fill: 'currentColor',
  viewBox: '0 0 32 32',
};

class Icon extends PureComponent<IconPropsType, {}> {
  static displayName = 'Icon';

  static defaultProps = {
    prefixcls: 'za-icon',
    theme: 'default',
    size: 'md',
    children: undefined,
    viewBox: '0 0 32 32',
    onClick: undefined,
  };

  static propTypes = {
    /** 类名前缀 */
    prefixcls: PropTypes.string,

    /** 设置主题 */
    theme: PropTypes.oneOf(['default', 'primary', 'success', 'warning', 'danger']),

    /** 设置大小 */
    size: PropTypes.oneOf(['lg', 'md', 'sm']),

    /** 当使用iconfont方式，需要传进来的孩子节点 */
    children: PropTypes.node,

    /** 当传进svg component, 需要设置svg的viewBox */
    viewBox: PropTypes.string,

    /** 点击事件 */
    onClick: PropTypes.func,
  };

  static createFromIconfont = createFromIconfont;

  render() {
    const { className, type = '', style = {}, prefixcls, theme, size, children, component: SvgComponent, viewBox, ...rest } = this.props;
    const cls = classnames(prefixcls, className, {
      [`${prefixcls}-${type}`]: !!type,
      [`${prefixcls}--theme-${theme}`]: !!theme,
      [`${prefixcls}--size-${size}`]: !!size,
    });

    const newProps = {
      className: cls,
      style,
      type,
      theme,
      size,
      ...rest,
    };

    let iconNode: React.ReactNode;

    // svg component > children by iconfont > type
    if (SvgComponent) {
      delete innerSvgProps.viewBox;
      iconNode = (
        <i {...newProps}>
          <SvgComponent {...innerSvgProps} viewBox={viewBox}>{children}</SvgComponent>
        </i>
      );
    } else if (children) {
      iconNode = (
        <i {...newProps}>
          <svg {...innerSvgProps}>
            {children}
          </svg>
        </i>
      );
    } else if (typeof type === 'string') {
      const MyIcon = Icon.createFromIconfont('//at.alicdn.com/t/font_1285036_15tyz5xf5zq.js');// generated by iconfont.cn
      iconNode = (
        <MyIcon type={type} {...newProps} />
      );
    }
    return iconNode;
  }
}

export default Icon;
