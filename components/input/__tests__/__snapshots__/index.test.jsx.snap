// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input renders correctly 1`] = `
<div
  class="za-input"
>
  <input
    autocomplete="off"
    type="text"
  />
</div>
`;

exports[`Input renders correctly if type isn't valid 1`] = `
<div
  class="za-input"
>
  <input
    autocomplete="off"
    type="xxx"
  />
</div>
`;

exports[`Input renders correctly if type=text and props includes rows 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    rows="1"
  />
</div>
`;

exports[`Input renders onClear called correctly 1`] = `
<Input
  clearable={true}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "My new value",
        ],
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onClear={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  type="text"
  value=""
>
  <InputBase
    clearable={true}
    disabled={false}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "My new value",
          ],
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onClear={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    prefixCls="za-input"
    readOnly={false}
    type="text"
    value=""
  >
    <div
      className="za-input za-input--focus za-input--clearable"
    >
      <input
        autoComplete="off"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onCompositionEnd={[Function]}
        onCompositionStart={[Function]}
        onCompositionUpdate={[Function]}
        onFocus={[Function]}
        type="text"
        value=""
      />
      <Icon
        className="za-input__clear"
        onClick={[Function]}
        type="wrong-round-fill"
      >
        <i
          className="za-icon za-icon-wrong-round-fill za-icon--theme-default za-input__clear"
          onClick={[Function]}
          prefixcls="za-icon"
          style={Object {}}
          theme="default"
          type="wrong-round-fill"
        >
          <SvgWrongRoundFill>
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              viewBox="0 0 37 37"
              width="1em"
            >
              <g
                fill="none"
                fillRule="evenodd"
                stroke="none"
                strokeWidth={2.6}
              >
                <path
                  d="M35 18.5C35 27.613 27.613 35 18.5 35S2 27.613 2 18.5 9.387 2 18.5 2 35 9.387 35 18.5z"
                  fill="currentColor"
                  stroke="currentColor"
                />
                <path
                  d="M13 13l11 11m0-11L13 24"
                  stroke="#FFF"
                />
              </g>
            </svg>
          </SvgWrongRoundFill>
        </i>
      </Icon>
    </div>
  </InputBase>
</Input>
`;

exports[`Input showLength 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    maxlength="100"
    rows="4"
  />
  <div
    class="za-input__length"
  >
    0/100
  </div>
</div>
`;

exports[`Input.Idcard renders correctly 1`] = `
<Input
  type="idcard"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="idcard"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="idcard"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Number renders correctly 1`] = `
<Input
  type="number"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="number"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="number"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Number renders onClear called correctly 1`] = `
<Input
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  onClear={
    [MockFunction] {
      "calls": Array [
        Array [
          "",
        ],
      ],
      "results": Array [
        Object {
          "isThrow": false,
          "value": undefined,
        },
      ],
    }
  }
  type="number"
  value=""
>
  <InputNumber
    clearable={true}
    disabled={false}
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onClear={
      [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    prefixCls="za-input"
    type="number"
    value=""
  >
    <div
      className="za-input za-input--number za-input--focus za-input--clearable"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="number"
          visible={true}
        >
          <Popup
            mask={false}
            visible={true}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              visible={true}
            >
              <Portal
                containerInfo={
                  <div
                    class="popup-container"
                  >
                    <div
                      class="za-popup za-popup--bottom za-popup--hidden"
                      role="dialog"
                    >
                      <div
                        class="za-popup__wrapper"
                        role="document"
                        style="transition-duration: 200ms;"
                      >
                        <div
                          class="za-keyboard-picker"
                        >
                          <div
                            class="za-keyboard"
                          >
                            <div
                              class="za-keyboard__keys"
                            >
                              <div
                                class="za-keyboard__item"
                              >
                                1
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                2
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                3
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                4
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                5
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                6
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                7
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                8
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                9
                              </div>
                              <div
                                class="za-keyboard__item za-keyboard__item--disabled"
                              />
                              <div
                                class="za-keyboard__item"
                              >
                                0
                              </div>
                              <div
                                class="za-keyboard__item"
                              >
                                <i
                                  class="za-icon za-icon-keyboard za-icon--theme-default"
                                  prefixcls="za-icon"
                                  theme="default"
                                  type="keyboard"
                                >
                                  <svg
                                    fill="currentColor"
                                    height="1em"
                                    stroke="currentColor"
                                    viewBox="0 0 1416 1024"
                                    width="1em"
                                  >
                                    <defs>
                                      <style />
                                    </defs>
                                    <path
                                      d="M0 0h1416.17v849.702H0V0zm87.149 87.149v675.404H1329.02V87.15H87.15zm130.723 108.936H326.81v108.936H217.872V196.085zm174.298 0h108.936v108.936H392.17V196.085zm174.298 0h108.936v108.936H566.468V196.085zm174.298 0h108.936v108.936H740.766V196.085zm174.298 0H1024v108.936H915.064V196.085zm174.298 0h108.936v108.936h-108.936V196.085zm-784.34 174.298h108.935v108.936H305.021V370.383zm174.297 0h108.936v108.936H479.32V370.383zm174.298 0h108.936v108.936H653.617V370.383zm174.298 0H936.85v108.936H827.915V370.383zm174.298 0h108.936v108.936h-108.936V370.383zm-784.34 174.298h108.936v108.936H217.872V544.681zm871.489 0h108.936v108.936h-108.936V544.681zm-697.192 0H1024v108.936H392.17V544.681zm196.085 348.596h261.447L718.98 1024 588.255 893.277z"
                                    />
                                  </svg>
                                </i>
                              </div>
                            </div>
                            <div
                              class="za-keyboard__handle"
                            >
                              <div
                                class="za-keyboard__item"
                              >
                                <i
                                  class="za-icon za-icon-deletekey za-icon--theme-default"
                                  prefixcls="za-icon"
                                  theme="default"
                                  type="deletekey"
                                >
                                  <svg
                                    class="deletekey_svg__icon"
                                    height="1em"
                                    viewBox="0 0 1385 1024"
                                    width="1em"
                                  >
                                    <defs>
                                      <style />
                                    </defs>
                                    <path
                                      d="M843.294 561.544l178.086 178.085 49.543-49.543L892.838 512l178.085-178.086-49.543-49.543-178.086 178.085-178.086-178.085-49.543 49.543L793.75 512 615.665 690.086l49.543 49.543 178.086-178.085zm299.008-471.191c84.21 0 152.757 67.554 152.757 150.588V783.06c0 83.034-68.518 150.588-152.757 150.588H572.235a154.564 154.564 0 0 1-110.2-46.32l-354.123-353.16-.573-.603-.572-.572a29.064 29.064 0 0 1-8.855-21.022c0-5.572 1.536-13.764 8.855-21.022l.572-.572.573-.603 354.123-353.13a154.504 154.504 0 0 1 110.2-46.35h570.067v.06zm0-90.353H596.6a244.134 244.134 0 0 0-174.953 73.668L43.16 426.828a119.657 119.657 0 0 0 0 170.375l378.488 353.16A244.134 244.134 0 0 0 596.6 1024.03h545.702c134.265 0 243.11-107.881 243.11-240.941V240.97c0-133.089-108.845-240.97-243.11-240.97z"
                                    />
                                  </svg>
                                </i>
                              </div>
                              <div
                                class="za-keyboard__item za-keyboard__item--ok"
                              >
                                确定
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                }
              >
                <div
                  className="za-popup za-popup--bottom za-popup--hidden"
                  role="dialog"
                  style={Object {}}
                >
                  <div
                    className="za-popup__wrapper"
                    role="document"
                    style={
                      Object {
                        "WebkitTransitionDuration": "200ms",
                        "transitionDuration": "200ms",
                      }
                    }
                  >
                    <div
                      className="za-keyboard-picker"
                    >
                      <ForwardRef(forwardRef)
                        onKeyClick={[Function]}
                        type="number"
                        visible={true}
                      >
                        <LocaleReceiver
                          forwardedRef={null}
                          onKeyClick={[Function]}
                          type="number"
                          visible={true}
                        >
                          <Keyboard
                            locale={
                              Object {
                                "okText": "确定",
                              }
                            }
                            localeCode="zh-cn"
                            onKeyClick={[Function]}
                            prefixCls="za-keyboard"
                            type="number"
                            visible={true}
                          >
                            <div
                              className="za-keyboard"
                            >
                              <div
                                className="za-keyboard__keys"
                              >
                                <div
                                  className="za-keyboard__item"
                                  key="0"
                                  onClick={[Function]}
                                >
                                  1
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="1"
                                  onClick={[Function]}
                                >
                                  2
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="2"
                                  onClick={[Function]}
                                >
                                  3
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="3"
                                  onClick={[Function]}
                                >
                                  4
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="4"
                                  onClick={[Function]}
                                >
                                  5
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="5"
                                  onClick={[Function]}
                                >
                                  6
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="6"
                                  onClick={[Function]}
                                >
                                  7
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="7"
                                  onClick={[Function]}
                                >
                                  8
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="8"
                                  onClick={[Function]}
                                >
                                  9
                                </div>
                                <div
                                  className="za-keyboard__item za-keyboard__item--disabled"
                                  key="9"
                                  onClick={[Function]}
                                />
                                <div
                                  className="za-keyboard__item"
                                  key="10"
                                  onClick={[Function]}
                                >
                                  0
                                </div>
                                <div
                                  className="za-keyboard__item"
                                  key="11"
                                  onClick={[Function]}
                                >
                                  <Icon
                                    type="keyboard"
                                  >
                                    <i
                                      className="za-icon za-icon-keyboard za-icon--theme-default"
                                      prefixcls="za-icon"
                                      style={Object {}}
                                      theme="default"
                                      type="keyboard"
                                    >
                                      <SvgKeyboard>
                                        <svg
                                          fill="currentColor"
                                          height="1em"
                                          stroke="currentColor"
                                          viewBox="0 0 1416 1024"
                                          width="1em"
                                        >
                                          <defs>
                                            <style />
                                          </defs>
                                          <path
                                            d="M0 0h1416.17v849.702H0V0zm87.149 87.149v675.404H1329.02V87.15H87.15zm130.723 108.936H326.81v108.936H217.872V196.085zm174.298 0h108.936v108.936H392.17V196.085zm174.298 0h108.936v108.936H566.468V196.085zm174.298 0h108.936v108.936H740.766V196.085zm174.298 0H1024v108.936H915.064V196.085zm174.298 0h108.936v108.936h-108.936V196.085zm-784.34 174.298h108.935v108.936H305.021V370.383zm174.297 0h108.936v108.936H479.32V370.383zm174.298 0h108.936v108.936H653.617V370.383zm174.298 0H936.85v108.936H827.915V370.383zm174.298 0h108.936v108.936h-108.936V370.383zm-784.34 174.298h108.936v108.936H217.872V544.681zm871.489 0h108.936v108.936h-108.936V544.681zm-697.192 0H1024v108.936H392.17V544.681zm196.085 348.596h261.447L718.98 1024 588.255 893.277z"
                                          />
                                        </svg>
                                      </SvgKeyboard>
                                    </i>
                                  </Icon>
                                </div>
                              </div>
                              <div
                                className="za-keyboard__handle"
                              >
                                <div
                                  className="za-keyboard__item"
                                  onMouseDown={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchCancel={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchStart={[Function]}
                                >
                                  <Icon
                                    type="deletekey"
                                  >
                                    <i
                                      className="za-icon za-icon-deletekey za-icon--theme-default"
                                      prefixcls="za-icon"
                                      style={Object {}}
                                      theme="default"
                                      type="deletekey"
                                    >
                                      <SvgDeletekey>
                                        <svg
                                          className="deletekey_svg__icon"
                                          height="1em"
                                          viewBox="0 0 1385 1024"
                                          width="1em"
                                        >
                                          <defs>
                                            <style />
                                          </defs>
                                          <path
                                            d="M843.294 561.544l178.086 178.085 49.543-49.543L892.838 512l178.085-178.086-49.543-49.543-178.086 178.085-178.086-178.085-49.543 49.543L793.75 512 615.665 690.086l49.543 49.543 178.086-178.085zm299.008-471.191c84.21 0 152.757 67.554 152.757 150.588V783.06c0 83.034-68.518 150.588-152.757 150.588H572.235a154.564 154.564 0 0 1-110.2-46.32l-354.123-353.16-.573-.603-.572-.572a29.064 29.064 0 0 1-8.855-21.022c0-5.572 1.536-13.764 8.855-21.022l.572-.572.573-.603 354.123-353.13a154.504 154.504 0 0 1 110.2-46.35h570.067v.06zm0-90.353H596.6a244.134 244.134 0 0 0-174.953 73.668L43.16 426.828a119.657 119.657 0 0 0 0 170.375l378.488 353.16A244.134 244.134 0 0 0 596.6 1024.03h545.702c134.265 0 243.11-107.881 243.11-240.941V240.97c0-133.089-108.845-240.97-243.11-240.97z"
                                          />
                                        </svg>
                                      </SvgDeletekey>
                                    </i>
                                  </Icon>
                                </div>
                                <div
                                  className="za-keyboard__item za-keyboard__item--ok"
                                  onClick={[Function]}
                                >
                                  确定
                                </div>
                              </div>
                            </div>
                          </Keyboard>
                        </LocaleReceiver>
                      </ForwardRef(forwardRef)>
                    </div>
                  </div>
                </div>
              </Portal>
            </Portal>
          </Popup>
        </KeyboardPicker>
      </div>
      <Icon
        className="za-input__clear"
        onClick={[Function]}
        type="wrong-round-fill"
      >
        <i
          className="za-icon za-icon-wrong-round-fill za-icon--theme-default za-input__clear"
          onClick={[Function]}
          prefixcls="za-icon"
          style={Object {}}
          theme="default"
          type="wrong-round-fill"
        >
          <SvgWrongRoundFill>
            <svg
              fill="currentColor"
              height="1em"
              stroke="currentColor"
              viewBox="0 0 37 37"
              width="1em"
            >
              <g
                fill="none"
                fillRule="evenodd"
                stroke="none"
                strokeWidth={2.6}
              >
                <path
                  d="M35 18.5C35 27.613 27.613 35 18.5 35S2 27.613 2 18.5 9.387 2 18.5 2 35 9.387 35 18.5z"
                  fill="currentColor"
                  stroke="currentColor"
                />
                <path
                  d="M13 13l11 11m0-11L13 24"
                  stroke="#FFF"
                />
              </g>
            </svg>
          </SvgWrongRoundFill>
        </i>
      </Icon>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Price renders correctly 1`] = `
<Input
  type="price"
>
  <InputNumber
    clearable={true}
    disabled={false}
    prefixCls="za-input"
    type="price"
  >
    <div
      className="za-input za-input--number"
      onClick={[Function]}
    >
      <div
        className="za-input__content"
      >
        <div
          className="za-input__placeholder"
        />
        <div
          className="za-input__virtual-input"
        />
        <input
          disabled={false}
          type="hidden"
          value=""
        />
        <KeyboardPicker
          onKeyClick={[Function]}
          prefixCls="za-keyboard-picker"
          type="price"
          visible={false}
        >
          <Popup
            mask={false}
            visible={false}
          >
            <Portal
              animationDuration={200}
              animationType="fade"
              direction="bottom"
              handlePortalUnmount={[Function]}
              mask={false}
              maskType="normal"
              prefixCls="za-popup"
              visible={false}
            />
          </Popup>
        </KeyboardPicker>
      </div>
    </div>
  </InputNumber>
</Input>
`;

exports[`Input.Textarea autoHeight 1`] = `
<Input
  autoHeight={true}
  onChange={[MockFunction]}
  rows={4}
  type="text"
  value="foo"
>
  <InputTextarea
    autoHeight={true}
    disabled={false}
    focused={false}
    onChange={[MockFunction]}
    prefixCls="za-input"
    rows={4}
    showLength={false}
    type="text"
    value="foo"
  >
    <div
      className="za-input za-input--textarea"
    >
      <textarea
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onCompositionEnd={[Function]}
        onCompositionStart={[Function]}
        onCompositionUpdate={[Function]}
        onFocus={[Function]}
        rows={4}
        value="foo"
      />
    </div>
  </InputTextarea>
</Input>
`;

exports[`Input.Textarea renders correctly 1`] = `
<div
  class="za-input za-input--textarea"
>
  <textarea
    rows="4"
  />
</div>
`;
